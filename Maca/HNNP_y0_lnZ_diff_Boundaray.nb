(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    225422,       4789]
NotebookOptionsPosition[    223541,       4728]
NotebookOutlinePosition[    223876,       4743]
CellTagsIndexPosition[    223833,       4740]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["1. Renormalization Group Recursive Equations Setup",
 FontFamily->"Bitstream Vera Sans",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{3.67059862203517*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", "8"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Mu]", ",", "\[Eta]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "6", "]"}], "=", 
   RowBox[{
    RowBox[{"B", "[", "6", "]"}], "=", "\[Mu]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", "7", "]"}], "=", 
   RowBox[{
    RowBox[{"B", "[", "7", "]"}], "=", "\[Eta]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Z0", "[", 
   RowBox[{"x0_", ",", "x1_", ",", "x2_", ",", "x3_", ",", "x4_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Mu]", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x0", "*", "x3"}], "+", 
         RowBox[{"x1", "*", "x4"}]}], ")"}]}], "/", "2"}], ")"}]}], "*", 
   RowBox[{"\[Eta]", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"x1", "+", "x3"}], ")"}]}], "/", "2"}], ")"}]}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "*", 
     RowBox[{"A", "[", "0", "]"}]}], "]"}], "*", 
   RowBox[{
    RowBox[{"A", "[", "1", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x0", "+", "x1"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"x1", "+", "x2"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"x2", "+", "x3"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"x3", "+", "x4"}], ")"}]}], ")"}]}], "/", "2"}], ")"}]}], 
   "*", 
   RowBox[{
    RowBox[{"A", "[", "2", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x0", "+", "x2"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"x2", "+", "x4"}], ")"}]}], ")"}]}], "/", "2"}], ")"}]}], 
   "*", 
   RowBox[{
    RowBox[{"A", "[", "3", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x0", "*", "x1"}], "+", 
         RowBox[{"x1", "*", "x2"}], "+", 
         RowBox[{"x2", "*", "x3"}], "+", 
         RowBox[{"x3", "*", "x4"}]}], ")"}]}], "/", "2"}], ")"}]}], "*", 
   RowBox[{
    RowBox[{"A", "[", "4", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x0", "*", "x2"}], "+", 
         RowBox[{"x2", "*", "x4"}]}], ")"}]}], "/", "2"}], ")"}]}], "*", 
   RowBox[{
    RowBox[{"A", "[", "5", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x0", "*", "x1", "*", "x2"}], "+", 
         RowBox[{"x2", "*", "x3", "*", "x4"}]}], ")"}]}], "/", "2"}], 
     ")"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"Z1", "[", 
   RowBox[{"x0_", ",", "x2_", ",", "x4_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"B", "[", "0", "]"}]}], "]"}], "*", 
   RowBox[{
    RowBox[{"B", "[", "1", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x0", "+", "x2"}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"x2", "+", "x4"}], ")"}]}], ")"}]}], "/", "2"}], ")"}]}], 
   "*", 
   RowBox[{
    RowBox[{"B", "[", "2", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"x0", "+", "x4"}], ")"}]}], "/", "2"}], ")"}]}], "*", 
   RowBox[{
    RowBox[{"B", "[", "3", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x0", "*", "x2"}], "+", 
         RowBox[{"x2", "*", "x4"}]}], ")"}]}], "/", "2"}], ")"}]}], "*", 
   RowBox[{
    RowBox[{"B", "[", "4", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"x0", "*", "x4"}], ")"}]}], "/", "2"}], ")"}]}], "*", 
   RowBox[{
    RowBox[{"B", "[", "5", "]"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "x0"}], "*", "x2", "*", 
      RowBox[{"x4", "/", "2"}]}], ")"}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"TrZ0", "[", 
   RowBox[{"x0_", ",", "x2_", ",", "x4_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"Z0", "[", 
       RowBox[{"x0", ",", "x1", ",", "x2", ",", "x3", ",", "x4"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x3", ",", 
      RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"i", "=", "0"}], ";"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"x0", "=", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"x0", "\[LessEqual]", "1"}], ",", 
   RowBox[{"x0", "+=", "2"}], ",", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"x2", "=", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"x2", "\[LessEqual]", "1"}], ",", 
     RowBox[{"x2", "+=", "2"}], ",", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"x4", "=", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"x4", "\[LessEqual]", "1"}], ",", 
       RowBox[{"x4", "+=", "2"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"leq", "[", "i", "]"}], "=", 
         RowBox[{"Z1", "[", 
          RowBox[{"x0", ",", "x2", ",", "x4"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"req", "[", 
          RowBox[{"i", "++"}], "]"}], "=", 
         RowBox[{"TrZ0", "[", 
          RowBox[{"x0", ",", "x2", ",", "x4"}], "]"}]}], ";"}]}], "]"}]}], 
    "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Equates", " ", "the", " ", "unrenormalized", " ", "with", " ", "the", " ",
     "renormalized", " ", "variables"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"req", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"leq", "[", "0", "]"}]}], ";"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"req", "[", "1", "]"}], "\[Equal]", 
   RowBox[{"leq", "[", "1", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"req", "[", "2", "]"}], "\[Equal]", 
   RowBox[{"leq", "[", "2", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"req", "[", "3", "]"}], "\[Equal]", 
   RowBox[{"leq", "[", "3", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"req", "[", "4", "]"}], "\[Equal]", 
   RowBox[{"leq", "[", "4", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"req", "[", "5", "]"}], "\[Equal]", 
   RowBox[{"leq", "[", "5", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"req", "[", "6", "]"}], "\[Equal]", 
   RowBox[{"leq", "[", "6", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"req", "[", "7", "]"}], "\[Equal]", 
   RowBox[{"leq", "[", "7", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SB", "[", "0", "]"}], "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Factor", "[", 
              RowBox[{
               RowBox[{"leq", "[", "0", "]"}], "*", 
               RowBox[{"leq", "[", "1", "]"}], "*", 
               RowBox[{"leq", "[", "2", "]"}], "*", 
               RowBox[{"leq", "[", "3", "]"}], "*", 
               RowBox[{"leq", "[", "4", "]"}], "*", 
               RowBox[{"leq", "[", "5", "]"}], "*", 
               RowBox[{"leq", "[", "6", "]"}], "*", 
               RowBox[{"leq", "[", "7", "]"}]}], "]"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "/", "8"}], ")"}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{
             RowBox[{"B", "[", "0", "]"}], ">", "0"}]}]}], "]"}], "\[Equal]", 
         
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Factor", "[", 
              RowBox[{
               RowBox[{"req", "[", "0", "]"}], "*", 
               RowBox[{"req", "[", "1", "]"}], "*", 
               RowBox[{"req", "[", "2", "]"}], "*", 
               RowBox[{"req", "[", "3", "]"}], "*", 
               RowBox[{"req", "[", "4", "]"}], "*", 
               RowBox[{"req", "[", "5", "]"}], "*", 
               RowBox[{"req", "[", "6", "]"}], "*", 
               RowBox[{"req", "[", "7", "]"}]}], "]"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "/", "8"}], ")"}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{
             RowBox[{"\[Eta]", ">", "0"}], "&&", 
             RowBox[{"\[Mu]", ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"A", "[", "0", "]"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"A", "[", "1", "]"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"A", "[", "2", "]"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"A", "[", "3", "]"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"A", "[", "4", "]"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"A", "[", "5", "]"}], ">", "0"}]}]}]}], "]"}]}], ",", 
        RowBox[{"B", "[", "0", "]"}]}], "]"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Equal]", "0"}], "&&", 
        RowBox[{"\[Eta]", ">", "0"}], "&&", 
        RowBox[{"\[Mu]", ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"A", "[", "0", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"A", "[", "1", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"A", "[", "2", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"A", "[", "3", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"A", "[", "4", "]"}], ">", "0"}], "&&", 
        RowBox[{
         RowBox[{"A", "[", "5", "]"}], ">", "0"}]}]}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SB", "[", "0", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"B", "[", "0", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"2", "*", 
       RowBox[{"A", "[", "0", "]"}]}], "+", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"B", "[", "0", "]"}], "/.", 
         RowBox[{"SB", "[", "0", "]"}]}], "/.", 
        RowBox[{
         RowBox[{"A", "[", "0", "]"}], "\[Rule]", "0"}]}], ")"}]}]}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SB", "[", "1", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Part", "[", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"leq", "[", "0", "]"}], "*", 
                RowBox[{"leq", "[", "1", "]"}], "*", 
                RowBox[{"leq", "[", "1", "]"}], "*", 
                RowBox[{"leq", "[", "5", "]"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "4"}], ")"}]}], "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"leq", "[", "0", "]"}], "*", 
                RowBox[{"leq", "[", "1", "]"}], "*", 
                RowBox[{"leq", "[", "2", "]"}], "*", 
                RowBox[{"leq", "[", "3", "]"}], "*", 
                RowBox[{"leq", "[", "4", "]"}], "*", 
                RowBox[{"leq", "[", "5", "]"}], "*", 
                RowBox[{"leq", "[", "6", "]"}], "*", 
                RowBox[{"leq", "[", "7", "]"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "8"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"B", "[", "1", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "3", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "0", "]"}], ">", "0"}]}], ")"}]}]}], "]"}], 
         "\[Equal]", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"req", "[", "0", "]"}], "*", 
                RowBox[{"req", "[", "1", "]"}], "*", 
                RowBox[{"req", "[", "1", "]"}], "*", 
                RowBox[{"req", "[", "5", "]"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "4"}], ")"}]}], "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"req", "[", "0", "]"}], "*", 
                RowBox[{"req", "[", "1", "]"}], "*", 
                RowBox[{"req", "[", "2", "]"}], "*", 
                RowBox[{"req", "[", "3", "]"}], "*", 
                RowBox[{"req", "[", "4", "]"}], "*", 
                RowBox[{"req", "[", "5", "]"}], "*", 
                RowBox[{"req", "[", "6", "]"}], "*", 
                RowBox[{"req", "[", "7", "]"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "8"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]", ">", "0"}], "&&", 
              RowBox[{"\[Eta]", ">", "0"}], "&&", 
              RowBox[{"\[Mu]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "0", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "1", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "2", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "3", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "4", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "5", "]"}], ">", "0"}]}], ")"}]}]}], "]"}]}],
         ",", 
        RowBox[{"B", "[", "1", "]"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SB", "[", "2", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Part", "[", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"leq", "[", "2", "]"}], "/", 
                 RowBox[{"leq", "[", "5", "]"}]}], "/", 
                RowBox[{"leq", "[", "1", "]"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "4"}], ")"}]}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"leq", "[", "0", "]"}], "/", 
                 RowBox[{"leq", "[", "1", "]"}]}], "*", 
                RowBox[{"leq", "[", "2", "]"}], "*", 
                RowBox[{"leq", "[", "3", "]"}], "*", 
                RowBox[{
                 RowBox[{"leq", "[", "4", "]"}], "/", 
                 RowBox[{"leq", "[", "5", "]"}]}], "*", 
                RowBox[{
                 RowBox[{"leq", "[", "6", "]"}], "/", 
                 RowBox[{"leq", "[", "7", "]"}]}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "8"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"B", "[", "1", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "3", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "0", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "2", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "4", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "5", "]"}], ">", "0"}]}], ")"}]}]}], "]"}], 
         "\[Equal]", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"req", "[", "2", "]"}], "/", 
                 RowBox[{"req", "[", "5", "]"}]}], "/", 
                RowBox[{"req", "[", "1", "]"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "4"}], ")"}]}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"req", "[", "0", "]"}], "/", 
                 RowBox[{"req", "[", "1", "]"}]}], "*", 
                RowBox[{"req", "[", "2", "]"}], "*", 
                RowBox[{"req", "[", "3", "]"}], "*", 
                RowBox[{
                 RowBox[{"req", "[", "4", "]"}], "/", 
                 RowBox[{"req", "[", "5", "]"}]}], "*", 
                RowBox[{
                 RowBox[{"req", "[", "6", "]"}], "/", 
                 RowBox[{"req", "[", "7", "]"}]}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"1", "/", "8"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]", ">", "0"}], "&&", 
              RowBox[{"\[Eta]", ">", "0"}], "&&", 
              RowBox[{"\[Mu]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "0", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "1", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "2", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "3", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "4", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "5", "]"}], ">", "0"}]}], ")"}]}]}], "]"}]}],
         ",", 
        RowBox[{"B", "[", "2", "]"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SB", "[", "3", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Part", "[", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"leq", "[", "2", "]"}], "*", 
               RowBox[{"leq", "[", "5", "]"}], "*", 
               RowBox[{"leq", "[", "1", "]"}], "*", 
               RowBox[{"leq", "[", "3", "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "2"}], ")"}]}], "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"leq", "[", "0", "]"}], "*", 
               RowBox[{"leq", "[", "1", "]"}], "*", 
               RowBox[{"leq", "[", "2", "]"}], "*", 
               RowBox[{"leq", "[", "3", "]"}], "*", 
               RowBox[{"leq", "[", "4", "]"}], "*", 
               RowBox[{"leq", "[", "5", "]"}], "*", 
               RowBox[{"leq", "[", "6", "]"}], "*", 
               RowBox[{"leq", "[", "7", "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "4"}], ")"}]}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"B", "[", "0", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "3", "]"}], ">", "0"}]}], ")"}]}]}], "]"}], 
         "\[Equal]", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"req", "[", "2", "]"}], "*", 
               RowBox[{"req", "[", "5", "]"}], "*", 
               RowBox[{"req", "[", "1", "]"}], "*", 
               RowBox[{"req", "[", "3", "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "2"}], ")"}]}], "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"req", "[", "0", "]"}], "*", 
               RowBox[{"req", "[", "1", "]"}], "*", 
               RowBox[{"req", "[", "2", "]"}], "*", 
               RowBox[{"req", "[", "3", "]"}], "*", 
               RowBox[{"req", "[", "4", "]"}], "*", 
               RowBox[{"req", "[", "5", "]"}], "*", 
               RowBox[{"req", "[", "6", "]"}], "*", 
               RowBox[{"req", "[", "7", "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "4"}], ")"}]}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]", ">", "0"}], "&&", 
              RowBox[{"\[Eta]", ">", "0"}], "&&", 
              RowBox[{"\[Mu]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "0", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "1", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "2", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "3", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "4", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "5", "]"}], ">", "0"}]}], ")"}]}]}], "]"}]}],
         ",", 
        RowBox[{"B", "[", "3", "]"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SB", "[", "4", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Part", "[", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"leq", "[", "1", "]"}], "*", 
              RowBox[{"leq", "[", "3", "]"}]}], ")"}], "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"leq", "[", "0", "]"}], "*", 
               RowBox[{"leq", "[", "1", "]"}], "*", 
               RowBox[{"leq", "[", "2", "]"}], "*", 
               RowBox[{"leq", "[", "3", "]"}], "*", 
               RowBox[{"leq", "[", "4", "]"}], "*", 
               RowBox[{"leq", "[", "5", "]"}], "*", 
               RowBox[{"leq", "[", "6", "]"}], "*", 
               RowBox[{"leq", "[", "7", "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "4"}], ")"}]}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{
             RowBox[{"B", "[", "0", "]"}], ">", "0"}]}]}], "]"}], "\[Equal]", 
         
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"req", "[", "1", "]"}], "*", 
              RowBox[{"req", "[", "3", "]"}]}], ")"}], "/", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"req", "[", "0", "]"}], "*", 
               RowBox[{"req", "[", "1", "]"}], "*", 
               RowBox[{"req", "[", "2", "]"}], "*", 
               RowBox[{"req", "[", "3", "]"}], "*", 
               RowBox[{"req", "[", "4", "]"}], "*", 
               RowBox[{"req", "[", "5", "]"}], "*", 
               RowBox[{"req", "[", "6", "]"}], "*", 
               RowBox[{"req", "[", "7", "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "4"}], ")"}]}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]", ">", "0"}], "&&", 
              RowBox[{"\[Eta]", ">", "0"}], "&&", 
              RowBox[{"\[Mu]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "0", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "1", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "2", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "3", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "4", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "5", "]"}], ">", "0"}]}], ")"}]}]}], "]"}]}],
         ",", 
        RowBox[{"B", "[", "4", "]"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SB", "[", "5", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Part", "[", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"leq", "[", "0", "]"}], "/", 
                 RowBox[{"leq", "[", "1", "]"}]}], "/", 
                RowBox[{"leq", "[", "2", "]"}]}], "*", 
               RowBox[{"leq", "[", "3", "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "2"}], ")"}]}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"leq", "[", "2", "]"}], "*", 
                 RowBox[{"leq", "[", "5", "]"}], "*", 
                 RowBox[{"leq", "[", "1", "]"}], "*", 
                 RowBox[{"leq", "[", "3", "]"}]}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}]}], "/", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"leq", "[", "0", "]"}], "*", 
                 RowBox[{"leq", "[", "1", "]"}], "*", 
                 RowBox[{"leq", "[", "2", "]"}], "*", 
                 RowBox[{"leq", "[", "3", "]"}], "*", 
                 RowBox[{"leq", "[", "4", "]"}], "*", 
                 RowBox[{"leq", "[", "5", "]"}], "*", 
                 RowBox[{"leq", "[", "6", "]"}], "*", 
                 RowBox[{"leq", "[", "7", "]"}]}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"B", "[", "3", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "5", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"B", "[", "0", "]"}], ">", "0"}]}], ")"}]}]}], "]"}], 
         "\[Equal]", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"req", "[", "0", "]"}], "/", 
                 RowBox[{"req", "[", "1", "]"}]}], "/", 
                RowBox[{"req", "[", "2", "]"}]}], "*", 
               RowBox[{"req", "[", "3", "]"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "2"}], ")"}]}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"req", "[", "2", "]"}], "*", 
                 RowBox[{"req", "[", "5", "]"}], "*", 
                 RowBox[{"req", "[", "1", "]"}], "*", 
                 RowBox[{"req", "[", "3", "]"}]}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}]}], "/", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"req", "[", "0", "]"}], "*", 
                 RowBox[{"req", "[", "1", "]"}], "*", 
                 RowBox[{"req", "[", "2", "]"}], "*", 
                 RowBox[{"req", "[", "3", "]"}], "*", 
                 RowBox[{"req", "[", "4", "]"}], "*", 
                 RowBox[{"req", "[", "5", "]"}], "*", 
                 RowBox[{"req", "[", "6", "]"}], "*", 
                 RowBox[{"req", "[", "7", "]"}]}], ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Lambda]", ">", "0"}], "&&", 
              RowBox[{"\[Eta]", ">", "0"}], "&&", 
              RowBox[{"\[Mu]", ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "0", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "1", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "2", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "3", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "4", "]"}], ">", "0"}], "&&", 
              RowBox[{
               RowBox[{"A", "[", "5", "]"}], ">", "0"}]}], ")"}]}]}], "]"}]}],
         ",", 
        RowBox[{"B", "[", "5", "]"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SBT", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Factor", "[", 
        RowBox[{"SB", "[", "n", "]"}], "]"}], ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6705986680840673`*^9, 3.670598695866497*^9}, 
   3.670598784584188*^9}],

Cell[TextData[StyleBox["2. Recursive Equation Setup ",
 FontFamily->"Bitstream Vera Sans",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.670598804953858*^9, 3.670598817858832*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "\[Eta]", ",", "x0", ",", "x1", ",", "x2", ",", "x", ",", "y",
    ",", "z", ",", "a", ",", "b", ",", "c"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SIC", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"B", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"B", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"B", "[", "2", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"B", "[", "3", "]"}], "\[Rule]", "\[Mu]"}], ",", 
     RowBox[{
      RowBox[{"B", "[", "4", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"B", "[", "5", "]"}], "->", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitRG", ":=", 
   RowBox[{"SAT", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"A", "[", "n", "]"}], "->", 
        RowBox[{"B", "[", "n", "]"}]}], "/.", "SIC"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"dim", "-", "1"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RG", ":=", 
   RowBox[{"SAT", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"A", "[", "n", "]"}], "->", 
        RowBox[{"B", "[", "n", "]"}]}], "/.", 
       RowBox[{"Simplify", "[", 
        RowBox[{"SBT", "/.", "SAT"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"dim", "-", "1"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Factor", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"B", "[", "i", "]"}], "/.", "SBT"}], ")"}], ",", 
        RowBox[{"A", "[", "j", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       RowBox[{"dim", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"dim", "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitRGW", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InitRG", ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalUpsilon]", "=", 
       RowBox[{"Array", "[", 
        RowBox[{"KroneckerDelta", ",", 
         RowBox[{"{", 
          RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RGW", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalUpsilon]", "=", 
       RowBox[{"Together", "[", 
        RowBox[{"\[CapitalUpsilon]", ".", 
         RowBox[{"(", 
          RowBox[{"W", "/.", "SAT"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "RG", ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LnZ1", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"A", "[", "0", "]"}]}], "+", 
    RowBox[{"Log", "[", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Eta]", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"x0", "+", "x1", "+", "x2"}], ")"}]}], "/", "2"}], 
              ")"}]}], "*", 
            RowBox[{
             RowBox[{"A", "[", "1", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"x0", "+", "x1"}], ")"}], "+", 
                  RowBox[{"(", 
                   RowBox[{"x1", "+", "x2"}], ")"}]}], ")"}]}], "/", "2"}], 
              ")"}]}], "*", 
            RowBox[{
             RowBox[{"A", "[", "2", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"x0", "+", "x2"}], ")"}]}], "/", "2"}], ")"}]}], "*", 
            RowBox[{
             RowBox[{"A", "[", "3", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"x0", "*", "x1"}], "+", 
                  RowBox[{"x1", "*", "x2"}]}], ")"}]}], "/", "2"}], ")"}]}], 
            "*", 
            RowBox[{
             RowBox[{"A", "[", "4", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"x0", "*", "x2"}], ")"}]}], "/", "2"}], ")"}]}], "*", 
            RowBox[{
             RowBox[{"A", "[", "5", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"x0", "*", "x1", "*", "x2"}], ")"}]}], "/", "2"}], 
              ")"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x0", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x1", ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x2", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"LnZ1", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"A", "[", "0", "]"}]}], "+", 
    RowBox[{"(", 
     RowBox[{"LnZ1", "/.", 
      RowBox[{
       RowBox[{"A", "[", "0", "]"}], "\[Rule]", "0"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DLnZ1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Factor", "[", 
      RowBox[{"D", "[", 
       RowBox[{"LnZ1", ",", 
        RowBox[{"A", "[", "i", "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"dim", "-", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"InitRGW", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Mu]d\[Beta]", "=", 
   RowBox[{
    RowBox[{"-", "2"}], "\[Mu]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0d\[Mu]", "=", 
   RowBox[{"d\[Mu]d\[Beta]", "*", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", "[", "i", "]"}], "/.", "SAT"}], ",", "\[Mu]"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"dim", "-", "1"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Eta]dH", "=", 
   RowBox[{
    RowBox[{"-", "2"}], "\[Eta]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dA0d\[Eta]", "=", 
   RowBox[{"d\[Eta]dH", "*", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", "[", "i", "]"}], "/.", "SAT"}], ",", "\[Eta]"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"dim", "-", "1"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"B", "[", "j", "]"}], "/.", "SBT"}], ")"}], ",", 
         RowBox[{"A", "[", "i", "]"}]}], "]"}], ",", 
       RowBox[{"A", "[", "k", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", 
       RowBox[{"dim", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       RowBox[{"dim", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"dim", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"InitRG\[CapitalOmega]", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"InitRGW", ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"0", "*", 
        RowBox[{"Array", "[", 
         RowBox[{"KroneckerDelta", ",", 
          RowBox[{"{", 
           RowBox[{"dim", ",", "dim", ",", "dim"}], "}"}]}], "]"}]}]}], 
      ";"}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalLambda]", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"\[CapitalUpsilon]", ",", 
            RowBox[{"A", "[", "j", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", 
            RowBox[{"dim", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"This", " ", "is", " ", "all", " ", "zero"}]}], ",", 
      RowBox[{"anyway", "!"}]}], "*)"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RG\[CapitalOmega]", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalLambda]", "=", 
       RowBox[{"Together", "[", 
        RowBox[{
         RowBox[{"Together", "[", 
          RowBox[{"\[CapitalLambda]", ".", 
           RowBox[{"Together", "[", 
            RowBox[{"W", "/.", "SAT"}], "]"}]}], "]"}], "+", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"Together", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalUpsilon]", ".", 
               RowBox[{"Together", "[", 
                RowBox[{"\[CapitalOmega]", "/.", "SAT"}], "]"}]}], ")"}], ".", 
             RowBox[{"Transpose", "[", "\[CapitalUpsilon]", "]"}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", "RGW", ";"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"D2LnZ1", "=", 
   RowBox[{"Factor", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"DLnZ1", ",", 
        RowBox[{"A", "[", "i", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"dim", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", "a", ",", "b", ",", "x", ",", "y", ",", "z"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "[", 
   RowBox[{"k_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"k", "\[Equal]", "0"}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"\[Eta]", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"x", "+", "y", "+", "z"}], ")"}]}], "/", "2"}], ")"}]}], 
        "*", 
        RowBox[{"\[Mu]", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "*", "y"}], "+", 
              RowBox[{"y", "*", "z"}]}], ")"}]}], "/", "2"}], ")"}]}]}], 
       "]"}], ",", 
      RowBox[{"Return", "[", 
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"\[Eta]", "^", 
          RowBox[{"(", 
           RowBox[{"y", "/", "2"}], ")"}]}], "*", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Mu]", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x", "*", "b"}], "+", 
                    RowBox[{"a", "*", "z"}]}], ")"}]}], "/", "2"}], ")"}]}], 
              "*", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{
                RowBox[{"k", "-", "1"}], ",", "x", ",", "a", ",", "y"}], 
               "]"}], "*", 
              RowBox[{"\[Theta]", "[", 
               RowBox[{
                RowBox[{"k", "-", "1"}], ",", "y", ",", "b", ",", "z"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", 
               RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"b", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
        "]"}], "]"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Z", "[", "k_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"k", ">", "0"}], ",", 
    RowBox[{"Return", "[", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "[", 
            RowBox[{
             RowBox[{"k", "-", "1"}], ",", "x", ",", "y", ",", "z"}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"Return", "[", "1", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6706001897653503`*^9, 3.67060021621763*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Free", " ", "energy", " ", "with", " ", "fixed", " ", 
    RowBox[{"boundary", ":", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"+", "1"}], " ", "x"}], " ", "+", "1"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[Mu]", ",", "\[Eta]", ",", "x0", ",", "x1", ",", "x2", ",", "x", ",", 
     "y", ",", "z", ",", "a", ",", "b", ",", "c"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Eta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"LnZ1pp", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"A", "[", "0", "]"}]}], "+", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Log", "[", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Eta]", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "+", "x1", "+", "1"}], ")"}]}], "/", "2"}], 
            ")"}]}], "*", 
          RowBox[{
           RowBox[{"A", "[", "1", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "x1"}], ")"}], "+", 
                RowBox[{"(", 
                 RowBox[{"x1", "+", "1"}], ")"}]}], ")"}]}], "/", "2"}], 
            ")"}]}], "*", 
          RowBox[{
           RowBox[{"A", "[", "2", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "+", "1"}], ")"}]}], "/", "2"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"A", "[", "3", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "*", "x1"}], "+", 
                RowBox[{"x1", "*", "1"}]}], ")"}]}], "/", "2"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"A", "[", "4", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "*", "1"}], ")"}]}], "/", "2"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"A", "[", "5", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"1", "*", "x1", "*", "1"}], ")"}]}], "/", "2"}], 
            ")"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x1", ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"LnZ1mp", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"A", "[", "0", "]"}]}], "+", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Log", "[", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Eta]", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "x1", "+", "1"}], ")"}]}], "/", 
             "2"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"A", "[", "1", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "x1"}], ")"}], "+", 
                RowBox[{"(", 
                 RowBox[{"x1", "+", "1"}], ")"}]}], ")"}]}], "/", "2"}], 
            ")"}]}], "*", 
          RowBox[{
           RowBox[{"A", "[", "2", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "1"}], ")"}]}], "/", "2"}], ")"}]}], 
          "*", 
          RowBox[{
           RowBox[{"A", "[", "3", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "*", "x1"}], "+", 
                RowBox[{"x1", "*", "1"}]}], ")"}]}], "/", "2"}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"A", "[", "4", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "*", "1"}], ")"}]}], "/", "2"}], ")"}]}], 
          "*", 
          RowBox[{
           RowBox[{"A", "[", "5", "]"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "*", "x1", "*", "1"}], ")"}]}], "/", 
             "2"}], ")"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x1", ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"LnZ1ratio", "=", 
    RowBox[{"Factor", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"LnZ1pp", "-", "LnZ1mp"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "\[Eta]", "]"}], "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{{3.6705989491166477`*^9, 3.670598950215147*^9}, {
   3.670601846902856*^9, 3.670601908511298*^9}, {3.670601963113069*^9, 
   3.670601963964669*^9}, {3.670602086355598*^9, 3.6706021692381*^9}, {
   3.670602250553684*^9, 3.6706022634904213`*^9}, {3.670602552399811*^9, 
   3.670602575119206*^9}, {3.670602619404307*^9, 3.670602733027334*^9}, {
   3.670602797742894*^9, 3.67060280715191*^9}, {3.6706036074660378`*^9, 
   3.670603609242219*^9}, 3.6706049470131607`*^9, {3.67060570028798*^9, 
   3.670605739527075*^9}, 3.670607222380596*^9, {3.6706080306817217`*^9, 
   3.6706080309723587`*^9}, {3.670608062061907*^9, 3.6706080829490223`*^9}, {
   3.670611808565688*^9, 3.6706118473273973`*^9}, {3.6706125809335337`*^9, 
   3.67061262028027*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"A", "[", "0", "]"}]}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"A", "[", "1", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"A", "[", "3", "]"}], "2"], " ", 
      RowBox[{"A", "[", "5", "]"}]}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"A", "[", "1", "]"}], "2"], " ", 
     RowBox[{"A", "[", "2", "]"}], " ", 
     RowBox[{"A", "[", "3", "]"}], " ", 
     SqrtBox[
      RowBox[{"A", "[", "4", "]"}]], " ", 
     SqrtBox[
      RowBox[{"A", "[", "5", "]"}]]}]], "]"}]}]], "Output",
 CellChangeTimes->{{3.6706057271076927`*^9, 3.6706057400124483`*^9}, 
   3.670607223293647*^9, {3.670608039207326*^9, 3.670608083370277*^9}, 
   3.6706118092262287`*^9, 3.67061184806173*^9, {3.670612598814221*^9, 
   3.670612621889565*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"A", "[", "0", "]"}]}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{"A", "[", "4", "]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"A", "[", "1", "]"}], "2"], "+", 
       RowBox[{"A", "[", "5", "]"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"A", "[", "1", "]"}], " ", 
     SqrtBox[
      RowBox[{"A", "[", "5", "]"}]]}]], "]"}]}]], "Output",
 CellChangeTimes->{{3.6706057271076927`*^9, 3.6706057400124483`*^9}, 
   3.670607223293647*^9, {3.670608039207326*^9, 3.670608083370277*^9}, 
   3.6706118092262287`*^9, 3.67061184806173*^9, {3.670612598814221*^9, 
   3.6706126218907957`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{
      SqrtBox[
       RowBox[{"A", "[", "4", "]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"A", "[", "1", "]"}], "2"], "+", 
        RowBox[{"A", "[", "5", "]"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"A", "[", "1", "]"}], " ", 
      SqrtBox[
       RowBox[{"A", "[", "5", "]"}]]}]], "]"}]}], "+", 
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"A", "[", "1", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"A", "[", "3", "]"}], "2"], " ", 
      RowBox[{"A", "[", "5", "]"}]}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"A", "[", "1", "]"}], "2"], " ", 
     RowBox[{"A", "[", "2", "]"}], " ", 
     RowBox[{"A", "[", "3", "]"}], " ", 
     SqrtBox[
      RowBox[{"A", "[", "4", "]"}]], " ", 
     SqrtBox[
      RowBox[{"A", "[", "5", "]"}]]}]], "]"}]}]], "Output",
 CellChangeTimes->{{3.6706057271076927`*^9, 3.6706057400124483`*^9}, 
   3.670607223293647*^9, {3.670608039207326*^9, 3.670608083370277*^9}, 
   3.6706118092262287`*^9, 3.67061184806173*^9, {3.670612598814221*^9, 
   3.670612621891927*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "\[Eta]", ",", "x0", ",", "x1", ",", "x2", ",", "x", ",", "y",
    ",", "z", ",", "a", ",", "b", ",", "c"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"InitRG", ";"}], "\n", 
 RowBox[{"Factor", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", "LnZ1", "]"}], "/.", "SAT"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"\[Mu]", ">", "0"}], "&&", 
      RowBox[{"\[Eta]", ">", "0"}]}]}]}], "]"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Factor", "[", 
   RowBox[{"Z", "[", "1", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Factor", "[", 
  RowBox[{"%%", "/", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.670600412741444*^9, 3.6706004327245293`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Eta]", "+", 
     SuperscriptBox["\[Eta]", "2"], "+", 
     RowBox[{"2", " ", "\[Eta]", " ", "\[Mu]"}], "+", 
     RowBox[{"\[Eta]", " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["\[Eta]", 
    RowBox[{"3", "/", "2"}]], " ", "\[Mu]"}]]], "Output",
 CellChangeTimes->{
  3.6705998006085987`*^9, {3.670600426761629*^9, 3.67060043340488*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.6705998006085987`*^9, {3.670600426761629*^9, 3.67060043340753*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "\[Eta]", ",", "x0", ",", "x1", ",", "x2", ",", "x", ",", "y",
    ",", "z", ",", "a", ",", "b", ",", "c"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "30.0"}], ";", 
  RowBox[{"\[Eta]", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"InitRG", ";"}], "\[IndentingNewLine]", 
 RowBox[{"RG", ";"}], "\n", 
 RowBox[{"Factor", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", "LnZ1", "]"}], "/.", "SAT"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"\[Mu]", ">", "0"}], "&&", 
      RowBox[{"\[Eta]", ">", "0"}]}]}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Factor", "[", 
  RowBox[{"%", "/", 
   RowBox[{"Z", "[", "2", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "\[Eta]", ",", "x0", ",", "x1", ",", "x2", ",", "x", ",", "y",
    ",", "z", ",", "a", ",", "b", ",", "c"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6706004851068573`*^9, 3.670600518906989*^9}, {
  3.670600552146813*^9, 3.670600554488291*^9}, {3.670600604394885*^9, 
  3.670600608626597*^9}, {3.670600884633719*^9, 3.670600975235045*^9}, {
  3.670601013637602*^9, 3.670601014015224*^9}, {3.670601116678224*^9, 
  3.670601142404303*^9}}],

Cell[BoxData["54196.200074074084`"], "Output",
 CellChangeTimes->{
  3.6706008800727663`*^9, {3.6706009168298283`*^9, 3.670600946788281*^9}, 
   3.670601024655264*^9, {3.670601117555128*^9, 3.670601142884845*^9}}],

Cell[BoxData["1.0000000000000002`"], "Output",
 CellChangeTimes->{
  3.6706008800727663`*^9, {3.6706009168298283`*^9, 3.670600946788281*^9}, 
   3.670601024655264*^9, {3.670601117555128*^9, 3.670601142886622*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "\[Eta]", ",", "x0", ",", "x1", ",", "x2", ",", "x", ",", "y",
    ",", "z", ",", "a", ",", "b", ",", "c"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "20.0"}], ";", 
  RowBox[{"\[Eta]", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"InitRG", ";"}], "\[IndentingNewLine]", 
 RowBox[{"RG", ";"}], "\n", 
 RowBox[{"RG", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Factor", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", "LnZ1", "]"}], "/.", "SAT"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"\[Mu]", ">", "0"}], "&&", 
      RowBox[{"\[Eta]", ">", "0"}]}]}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Factor", "[", 
  RowBox[{"%", "/", 
   RowBox[{"Z", "[", "3", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]", ",", "\[Eta]", ",", "x0", ",", "x1", ",", "x2", ",", "x", ",", "y",
    ",", "z", ",", "a", ",", "b", ",", "c"}], "]"}]}], "Input",
 CellChangeTimes->{{3.67060122141533*^9, 3.670601239636033*^9}, {
  3.670601410060259*^9, 3.67060142816269*^9}}],

Cell[BoxData["2.1973213323349968`*^7"], "Output",
 CellChangeTimes->{{3.670601230106359*^9, 3.6706012405858583`*^9}, {
  3.670601410884601*^9, 3.670601428708618*^9}}],

Cell[BoxData["0.9999999999999984`"], "Output",
 CellChangeTimes->{{3.670601230106359*^9, 3.6706012405858583`*^9}, {
  3.670601410884601*^9, 3.670601428711691*^9}}]
}, Open  ]],

Cell[TextData[StyleBox["Analysis of free energy",
 FontFamily->"Bitstream Vera Sans",
 FontSize->16,
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.670602865994412*^9, 3.670602874658855*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Mu]", ",", "\[Eta]", ",", "freeE"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"InitRGW", ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"*", "Temperature", " ", "for", " ", "Mag"}], ",", " ", "IE"}], 
   "**)"}]}], "\n", 
 RowBox[{
  RowBox[{"precN", "=", "200"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Tmin", "=", "0.011"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Tmax", "=", "10.006"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Tinc", "=", "0.1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TVector", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Tmin", ",", "Tmax", ",", "Tinc"}], "]"}], ",", "0.01"}], 
      "]"}], ",", "precN"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Mu]Vector", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"2", "/", "TVector"}], "]"}], ",", "precN"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]invVector", "=", 
    RowBox[{"1.0", "/", "\[Mu]Vector"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Mu]iv", "=", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"Max", "[", 
             RowBox[{"2.0", "/", 
              RowBox[{"Max", "[", "TVector", "]"}]}], "]"}]}], "]"}], "*", 
          "1000"}], "]"}], "/", "1000.0"}], ",", "0.999999", ",", "0.005"}], 
      "]"}]}], ";", "\n", 
    RowBox[{"\[Mu]iv", "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"\[Mu]iv", ",", 
         RowBox[{"{", "0.999999998", "}"}]}], "]"}], ",", "precN"}], "]"}]}], 
    ";", "\n", 
    RowBox[{"\[Mu]invVector", "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"\[Mu]invVector", ",", "\[Mu]iv"}], "]"}], ",", "precN"}], 
      "]"}]}], ";", "\n", 
    RowBox[{"\[Mu]Vector", "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"\[Mu]Vector", ",", 
         RowBox[{"1.0", "/", "\[Mu]iv"}]}], "]"}], ",", "precN"}], "]"}]}], 
    ";", "\n", 
    RowBox[{
     RowBox[{"\[Mu]Vector", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"Dimensions", "[", "\[Mu]Vector", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "=", "1"}], ";", "\n", 
    RowBox[{"TVector", "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"TVector", ",", 
         RowBox[{"2.0", "/", 
          RowBox[{"Log", "[", 
           RowBox[{"1", "/", "\[Mu]iv"}], "]"}]}]}], "]"}], ",", "precN"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Clear", "[", "\[Mu]iv", "]"}], ";"}], "\[IndentingNewLine]", 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"kVector", "=", 
     RowBox[{"{", 
      RowBox[{
      "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",",
        "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", 
       "19", ",", "20", ",", "32", ",", "64", ",", "100", ",", "128", ",", 
       "200", ",", "256"}], "}"}]}], ";"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"kVector", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"16", ",", "22", ",", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{"InitRGW", ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Eta]", "=", 
   RowBox[{"N", "[", 
    RowBox[{"1.0", ",", "precN"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"freeE", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "TVector", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"freeE2", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "TVector", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"freeEratio", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "TVector", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]ind", "=", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"kind", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Mu]ind", "++"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Mu]", "=", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"\[Mu]Vector", "[", 
         RowBox[{"[", "\[Mu]ind", "]"}], "]"}], ",", "precN"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "InitRGW", ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "2"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Max", "[", "kVector", "]"}]}], ",", 
       RowBox[{"++", "i"}], ",", 
       RowBox[{"RGW", ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"kVector", "[", 
            RowBox[{"[", "kind", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{"freeE", ",", "kind"}], "]"}], ",", "\[Mu]ind"}], 
             "]"}], "=", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"2", "/", 
                  RowBox[{"Log", "[", "\[Mu]", "]"}]}], "/", 
                 RowBox[{"2", "^", "i"}]}], "*", "LnZ1pp"}], "/.", "SAT"}], 
              ",", "precN"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{"freeE2", ",", "kind"}], "]"}], ",", "\[Mu]ind"}], 
             "]"}], "=", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"2", "/", 
                  RowBox[{"Log", "[", "\[Mu]", "]"}]}], "/", 
                 RowBox[{"2", "^", "i"}]}], "*", "LnZ1mp"}], "/.", "SAT"}], 
              ",", "precN"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{"freeEratio", ",", "kind"}], "]"}], ",", "\[Mu]ind"}], 
             "]"}], "=", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"2", "/", 
                 RowBox[{"Log", "[", "\[Mu]", "]"}]}], "*", "LnZ1ratio"}], "/.",
                "SAT"}], ",", "precN"}], "]"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"kind", "++"}]}], ","}], "\[IndentingNewLine]", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"Tx", ",", "1", ",", 
      RowBox[{
       RowBox[{"Dimensions", "[", "\[Mu]Vector", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\n", 
 RowBox[{"p1", "=", 
  RowBox[{"Rasterize", "[", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.0", "/", 
            RowBox[{"\[Mu]Vector", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"freeE", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Dimensions", "[", "\[Mu]Vector", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<k=6\>\"", ",", "\"\<k=7\>\"", ",", "\"\<k=8\>\"", ",", 
        "\"\<k=9\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", "1.9"}], "}"}]}], "}"}]}]}], "]"}], 
   "]"}]}], "\n", 
 RowBox[{"p2", "=", 
  RowBox[{"Rasterize", "[", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.0", "/", 
            RowBox[{"\[Mu]Vector", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"freeE2", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Dimensions", "[", "\[Mu]Vector", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<k=6\>\"", ",", "\"\<k=7\>\"", ",", "\"\<k=8\>\"", ",", 
        "\"\<k=9\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", "1.9"}], "}"}]}], "}"}]}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rasterize", "[", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.0", "/", 
            RowBox[{"\[Mu]Vector", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"freeEratio", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Dimensions", "[", "\[Mu]Vector", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<k=6\>\"", ",", "\"\<k=7\>\"", ",", "\"\<k=8\>\"", ",", 
        "\"\<k=9\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"IEc", "=", "IE"}], ";", "\n", 
    RowBox[{"PrependTo", "[", 
     RowBox[{"IEc", ",", "TVector"}], "]"}], ";", "\n", 
    RowBox[{"PrependTo", "[", 
     RowBox[{"IEc", ",", 
      RowBox[{"1.0", "/", "\[Mu]Vector"}]}], "]"}], ";", "\n", 
    RowBox[{"PrependTo", "[", 
     RowBox[{"kVector", ",", "0"}], "]"}], ";", "\n", 
    RowBox[{"PrependTo", "[", 
     RowBox[{"kVector", ",", "0"}], "]"}], ";", "\n", 
    RowBox[{"IEc", "=", 
     RowBox[{"Transpose", "[", "IEc", "]"}]}], ";", "\n", 
    RowBox[{"IEc", "=", 
     RowBox[{"PrependTo", "[", 
      RowBox[{"IEc", ",", "kVector"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\</home/xcheng0907/GoogleDrive/Research/AntiHN/Maca/data/HNNP_AFM_IE_\
test.csv\>\"", ",", "IEc"}], "]"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"For", " ", "Linux"}], "*)"}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQrdciPUMu8rWjwkHX2SC6TL11A4j2vy2+FUQvYFi1
C0RH3U7cC6LvnBU7CqKLBbOOg2ibPa0PQPSsA5kvQXT70sJ3ILpc4cEHEM30
55CoPJD+lcUlBaJX+q1SANHP1p5UA9EmWdy5INplTxeYfpY9qxdEyzG8AdPv
2kyngWin0pz5INpDkXkpiC4QVlwOopX1960F0S+++64Dm6e4ZweIDnN5uhNE
J5y9+BJEr7n//g2IZij6oqIIcj+TsyqIZvR9owein5o36YNoLnkzCxCd8bMF
TOctOuQOou81KgSDaAA20YnP
  "]],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3QlYVOXCwHHv9z33+e7zLW03Ldue/FwyNRfcQrTNvKXmzeW60zaoaGgU
dsurlomxiLhAbkQukZbRTTTrRuSakUn6gYaKS5ECGuAAMuwznPnOzBnGGV4Y
HGbgjOP/95yeR5iF887gv3fOHOftoAkeq/n3Nm3aZMv/ffmHNm1MfzYCAAAA
AAAAAABALfqCbyJDlm/5PCHq1bCUAr38jZzNw3wCj+gauKiB73gCJ4agz98Z
1Ovezt26y7o90Mv/W22t2ntfx6knQiFpk5/sN+9EhYp7bcepIRiKU1fMnBvz
0WcfRi75NLtK7X2/yplRSOWn4oODIjZ+khC7eF58Zpmk9s4rHAzBWKvLSonw
adslJCkjv1pq6Mowk7Qpk/pMOVgi/7Hk4FSfKSlyK6SqwrxSfQMXGRq4svqc
GoK8w/rLh7bvyCgxyLesyDumrVF7/xXOjsJyI09qo3NDKDsa0nfYtovy01B1
OtxveEKuh/yldG4UJQfH9gtKL5O/U/HzGwOf3Ves8t6bORiCQpc2tatf4qXa
xq4Mk9IfJnQasOGCeU6Ys3FApwmHShu/KK/xK6vIqSEoF+kL9ry3JrXIoNIe
N8SZUexPjx07ctSzshG+bW/p/MTE+Rk69fbcyqknIv/nuT16Lc6qMn9n08DO
kw57wu+S0dlfp5oLmzT+H1+oKNgXOqyDb8Rpj5j+OhiCQpfmb21jk1e+UdXm
b/e9Z1BSvulRkgp2+t3rt7NAauyipMzPG7uyipwagvUi6crhJbM+OFup1l7X
59woLv6+e11Cpk7yqHmjc0PI/knTpVf4GbklUtGeiR37LDtXrebOWzn/61R2
LPTRHu3uHhF1qNgz/mfrYAgWNm1s+so3rCup4zr2e/+8+f8aF+L7dxyXeqXx
i3Iav7KKnBpCSU1pjfLUl6fP7jc6+bKn/B44NYorRqn89Lb1yXmXvvacNjo3
BG3OhgG33/9C2NK3Z4waNHrJ98We8krOuSfCUJg8q3f3SSu/3rly/vK9lz0j
jg6GoLCdNzZ55RtWrfbbKb3H7y2WjFLxvol9A74rkRq/yND4lVXk1BCqcxJD
k85Xy23JXDnwnsGW3w8P4NQozBcZtN/Hr4gc4OMxbXRuCIb8HRO7+K7N9pDj
vVbOjaLs6Iz+5oN1UuGXTw9NyPWIODoYgsL2eGOTV76BGQr3RLzy7oZPE5bP
XXnQ/hCceJGDK6vImSFIFWc2zR4x5KH77+s9Oea4zoN+D5x6IhSVZ9aO9l3g
KW10dgiGogOLR40I3etpb406NYqq7MTQyLUJH61dErxgx0VPCb2jv6f6osxd
i3q297XOCzzzLzVwY9Nr07e/v+WLA8c95XyBG4Nee/LH3EoPmhgAAAAAHq7x
8+Q99MR+AGhxjs6T98gT+wGgFTg69d0jT+wHgJbX1KnvDk7sbwPAG7VigDyZ
o1PfHZ/Y7+xj2IzH3At+BLvkIT+CXWq5m3gpR6e+Oz6x3wOfJg/8EeySh/wI
dqnlbuK1HJz67vDEfg98mjzwR7BLHvIj2KWWuwnq8Y7H0AtG4QVDMHrFKLxg
CEZvGYW6eAwBQEQbAUBEGwFARBsBQEQbAUDEWfQAIKKKACCijQAgoo0AIKKN
ACCijQAgoo0AIKKNACCijQAg4txvABBRRQAQ0UYAENFGABDRRgAQ0UYAENFG
ABDRRgAQ0UYAEHHuNwCIqCIAiGgjAIhoIwCIaCMAiGgjAK9Wq8tKifBp2yUk
KSO/WjIa9Tmbh/kEHtHJfyr4JjJk+ZbPE6JeDUsp0NvfjDYC8Ha6tKld/RIv
1SpfSVWFeaV6o6RNmdRnysES+TslB6f6TEnR1trehjYC8Ha6NH+bNlqU/jCh
04ANF0zTRX3OxgGdJhwqtb2YNgLwdg21sTZ/u+89g5LyTd+UCnb63eu3s0Cy
ubyNvdbdYQBoBQ3OG6+kjuvY7/3z5nnjhfj+HcelXrG9mB4C8Hb2xxstarXf
Tuk9fm+xZJSK903sG/Bdie20kTYC8G76osxdi3q2963fRqPRULgn4pV3N3ya
sHzuyoNFBvsLaSMAr6fXnvwxt1Jq+opX0UYAENFGABDRRgAQ0UYAENFGABBx
1jcAiKgiAIhoIwCIaCMAiGgjAIhoIwCIaCOA607tleNJH6xaEf9VVln9D5Bw
F9oIoLUZSv7v438MuvU/73shbl/2pf1vdP7TH+98auHWoyWGpm9rcy/aQysn
Dxo5Pzlf3/SVnUYbAaigKmvxg+0GJeXXFH71wn23+0YdL7f9lBxJX1Gmq6+s
rFKYJFZnx/3lvr7z0kqd+oyda0EbAaigKiv0wTsG/fPnzyfde+dT8b9V210o
Fe2b9sTA+nyffv1YmXBHNefjB7fvveRUpZt3kH8XA8CxLelJQ+ImNG9r9E5N
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
cm196orMv3e+49HPf1daeeXgyLs6vnKs3K07eB0dbywpLra+1pb7YH0NvmXd
Rmvbo15foPREfvFu6fmsup5Pn2XNuLXhyzTPiQG31mzN9L8qfVs3Y4TQ7SfU
b7KyBT2m7JIlyzMsWX5v2ljboyLyAG0nz5EaTV2Q7abNka+9KT96y/6+QHk8
N6xYqzzIh/anyg/7mRNZav8WQAVbt6Q/OiSueVujd+rS+tT6nI39brs/KMNS
w9JD4+687ZFvtM0fYgM499t18hROKfa/PtullOTD2DibXFsm4RGzQ+pNv8MD
pst1igwIUHoVbQn1VKVmsQHjbRO9dsZIS59nPal+nOX5vM2RDXnfbI9pKDNk
pcbL6g5KW1Ks/H9q1ivWifHyeYvkR2ldWLRthAsLLqv9rOKqFmtjs9enNr0g
v6Xr26cqzV/pczf3u/mOMalX3Dpqqni9O5t1Timz0pZNq9YpTV72xkLzUZE3
LUEODKoLsqlR8ryxLsh202Z5nmkO8ti6CbMlyOoc4jBPiesKPNwuv5oJ1qMT
0fXya54Jh5vzG/nK69Z3/da8u0x5iFL3HiC/6nNpfWrTvPGmPz+VmCffrLb0
8Nvdb7rHf3cDiXUFbUQznEg/Luflu5S9Sm3io2Ntj2mEz37NWuNw80HpiLq5
sXIEY6VmknVivHraaNOsePozdhGe/Ugr5Xe2bX6fts/veMf5lef/ptmvOb+r
FobKw09YHa9MfXmrrmmurU9dnj6nw59u7qMJfH7M4G6d+o5b+p3Wibe4rwlt
hMdSpsQpSf+yPapse4AibGaQ9T3BiLrDyNEN5HeMOb+jWju/5jMrlHfolMMO
8p7I+6NM0a2Hfy1vxplPmVCmu0tD5pneg1sStS58ufXsiN/O/qr2E+JWLq1P
bTRWnHir2y1d3jxef5UX96GNuJHJwZGzs3tXspygres32c1+zW/nhc2cbX4j
r8H8TjademHO75ppz5oOQQQOr2tvix0NVo70znzK1FvTLPev1nfclCnuMs3z
8h6q/bheA5fWp5ZJV36Y+1D7wSuyKt26W1fRRqCFFBZclsObvN30Dl38shi5
utFvvmU+5vBq2MvB5uTOtB77XfbSc9bprvWQr3KowXJ2hPzy/5oTqvbQm+Ly
+tRmNZd2hQx9+KW49FL3HmlU0EbgOpJ17ITc28TNW+XeyrGNfSfceh6yMsUN
nzZD7q3au3kt3LM+tb7o6CdR4TEb/nnA3Utd00YAENFGABBx7jcAiKgiAIho
IwCIaCMAiGgjAIhoIwCvVqvLSonwadslJCkjv1oyfVDF5mE+gUd0RqOhOHXF
zLkxH332YeSST7PrnR9JGwF4O13a1K5+iZcs/3xGqirMK9UbjWVHQ/oO23bR
YDRWnQ73G56Qa/dhQLQRgLfTpfnbtNGi4ue5PXotzjJNF/U5mwZ2nnS41PZi
2gjA2zXYxrIjmi69ws9UmZZg2DOxY59l9ivO0EYA3q7BNupzNgy4/f4Xwpa+
PWPUoNFLvi+2v7iNvdbcXQBoFfbHG+sY8ndM7OK7Nrvh5VvpIQCvpi/K3LWo
Z3tfoY1yHYsOLB41InRvQQOLedFGAF5Prz35Y26l1PBF6dvf3/LFgeNa+/kj
bQQAEW0EABFtBAARbQQAEW0EABFtBAARZ30DgIgqAoCINgKAiDYCgIg2AoCI
NgKAiDYCgIg2AoCINgKAiHO/AUBEFQFARBsBQEQbAUBEGwFARBsBQEQbAUBE
GwFARBsBQMS53wAgoooAIKKNACCijQAgoo0AIKKNALxarS4rJcKnbZeQpIz8
aslo1OdsHuYTeERnlMpPxQcHRWz8JCF28bz4zDLJ7ma0EYC306VN7eqXeKlW
+UqqKswr1RuNJQfH9gtKL5O/U/HzGwOf3VdsdxvaCMDb6dL8bdpYp+bCJo3/
xxcqCvaFDuvgG3G6yu5S2gjA2zXcRlnZsdBHe7S7e0TUoWJDvYva2GudHQWA
VtRwGw2FybN6d5+08uudK+cv33u5XhzpIQBvZ3+8sU7Z0Rn9pxwsMRqlwi+f
HpqQax9H2gjAq+mLMnct6tneV3xNXZWdGBq5NuGjtUuCF+y4WGN/IW0E4PX0
2pM/5lZKTV/xKtoIACLaCAAi2ggAItoIACLaCAAi2ggAIv5FDACIqCIAiGgj
AIhoIwCIaCMAiGgjAIhoIwCIaCMAiGgjAIg49xsAAODG8f8sWZ/V
   "], {{0, 0}, {436, 
   223}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{436, 223},
  PlotRange->{{0, 436}, {0, 223}}]], "Output",
 CellChangeTimes->{3.670604097980315*^9, 3.670604668860066*^9, 
  3.670604915446869*^9, 3.670604956350869*^9, 3.670604994779335*^9, 
  3.670605030947771*^9, 3.6706050635620747`*^9, 3.6706051247798643`*^9, 
  3.670605287725142*^9, 3.670608122339119*^9, 3.6706082208615713`*^9, 
  3.6706082787944517`*^9, 3.670608357248704*^9, 3.6706085670842648`*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3QlYVOXCwHHv9z33+e7zLW03Ldue/FwyNRfcQrTNvKXmzeW60zaoaGgU
dsurlomxiLhAbkQukZbRTTTrRuSakUn6gYaKS5ECGuAAMuwznPnOzBnGGV4Y
HGbgjOP/95yeR5iF887gv3fOHOftoAkeq/n3Nm3aZMv/ffmHNm1MfzYCAAAA
AAAAAABALfqCbyJDlm/5PCHq1bCUAr38jZzNw3wCj+gauKiB73gCJ4agz98Z
1Ovezt26y7o90Mv/W22t2ntfx6knQiFpk5/sN+9EhYp7bcepIRiKU1fMnBvz
0WcfRi75NLtK7X2/yplRSOWn4oODIjZ+khC7eF58Zpmk9s4rHAzBWKvLSonw
adslJCkjv1pq6Mowk7Qpk/pMOVgi/7Hk4FSfKSlyK6SqwrxSfQMXGRq4svqc
GoK8w/rLh7bvyCgxyLesyDumrVF7/xXOjsJyI09qo3NDKDsa0nfYtovy01B1
OtxveEKuh/yldG4UJQfH9gtKL5O/U/HzGwOf3Ves8t6bORiCQpc2tatf4qXa
xq4Mk9IfJnQasOGCeU6Ys3FApwmHShu/KK/xK6vIqSEoF+kL9ry3JrXIoNIe
N8SZUexPjx07ctSzshG+bW/p/MTE+Rk69fbcyqknIv/nuT16Lc6qMn9n08DO
kw57wu+S0dlfp5oLmzT+H1+oKNgXOqyDb8Rpj5j+OhiCQpfmb21jk1e+UdXm
b/e9Z1BSvulRkgp2+t3rt7NAauyipMzPG7uyipwagvUi6crhJbM+OFup1l7X
59woLv6+e11Cpk7yqHmjc0PI/knTpVf4GbklUtGeiR37LDtXrebOWzn/61R2
LPTRHu3uHhF1qNgz/mfrYAgWNm1s+so3rCup4zr2e/+8+f8aF+L7dxyXeqXx
i3Iav7KKnBpCSU1pjfLUl6fP7jc6+bKn/B44NYorRqn89Lb1yXmXvvacNjo3
BG3OhgG33/9C2NK3Z4waNHrJ98We8krOuSfCUJg8q3f3SSu/3rly/vK9lz0j
jg6GoLCdNzZ55RtWrfbbKb3H7y2WjFLxvol9A74rkRq/yND4lVXk1BCqcxJD
k85Xy23JXDnwnsGW3w8P4NQozBcZtN/Hr4gc4OMxbXRuCIb8HRO7+K7N9pDj
vVbOjaLs6Iz+5oN1UuGXTw9NyPWIODoYgsL2eGOTV76BGQr3RLzy7oZPE5bP
XXnQ/hCceJGDK6vImSFIFWc2zR4x5KH77+s9Oea4zoN+D5x6IhSVZ9aO9l3g
KW10dgiGogOLR40I3etpb406NYqq7MTQyLUJH61dErxgx0VPCb2jv6f6osxd
i3q297XOCzzzLzVwY9Nr07e/v+WLA8c95XyBG4Nee/LH3EoPmhgAAAAAHq7x
8+Q99MR+AGhxjs6T98gT+wGgFTg69d0jT+wHgJbX1KnvDk7sbwPAG7VigDyZ
o1PfHZ/Y7+xj2IzH3At+BLvkIT+CXWq5m3gpR6e+Oz6x3wOfJg/8EeySh/wI
dqnlbuK1HJz67vDEfg98mjzwR7BLHvIj2KWWuwnq8Y7H0AtG4QVDMHrFKLxg
CEZvGYW6eAwBQEQbAUBEGwFARBsBQEQbAUDEWfQAIKKKACCijQAgoo0AIKKN
ACCijQAgoo0AIKKNACCijQAg4txvABBRRQAQ0UYAENFGABDRRgAQ0UYAENFG
ABDRRgAQ0UYAEHHuNwCIqCIAiGgjAIhoIwCIaCMAiGgjAK9Wq8tKifBp2yUk
KSO/WjIa9Tmbh/kEHtHJfyr4JjJk+ZbPE6JeDUsp0NvfjDYC8Ha6tKld/RIv
1SpfSVWFeaV6o6RNmdRnysES+TslB6f6TEnR1trehjYC8Ha6NH+bNlqU/jCh
04ANF0zTRX3OxgGdJhwqtb2YNgLwdg21sTZ/u+89g5LyTd+UCnb63eu3s0Cy
ubyNvdbdYQBoBQ3OG6+kjuvY7/3z5nnjhfj+HcelXrG9mB4C8Hb2xxstarXf
Tuk9fm+xZJSK903sG/Bdie20kTYC8G76osxdi3q2963fRqPRULgn4pV3N3ya
sHzuyoNFBvsLaSMAr6fXnvwxt1Jq+opX0UYAENFGABDRRgAQ0UYAENFGABBx
1jcAiKgiAIhoIwCIaCMAiGgjAIhoIwCIaCOA607tleNJH6xaEf9VVln9D5Bw
F9oIoLUZSv7v438MuvU/73shbl/2pf1vdP7TH+98auHWoyWGpm9rcy/aQysn
Dxo5Pzlf3/SVnUYbAaigKmvxg+0GJeXXFH71wn23+0YdL7f9lBxJX1Gmq6+s
rFKYJFZnx/3lvr7z0kqd+oyda0EbAaigKiv0wTsG/fPnzyfde+dT8b9V210o
Fe2b9sTA+nyffv1YmXBHNefjB7fvveRUpZt3kH8XA8CxLelJQ+ImNG9r9E5N
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
cm196orMv3e+49HPf1daeeXgyLs6vnKs3K07eB0dbywpLra+1pb7YH0NvmXd
Rmvbo15foPREfvFu6fmsup5Pn2XNuLXhyzTPiQG31mzN9L8qfVs3Y4TQ7SfU
b7KyBT2m7JIlyzMsWX5v2ljboyLyAG0nz5EaTV2Q7abNka+9KT96y/6+QHk8
N6xYqzzIh/anyg/7mRNZav8WQAVbt6Q/OiSueVujd+rS+tT6nI39brs/KMNS
w9JD4+687ZFvtM0fYgM499t18hROKfa/PtullOTD2DibXFsm4RGzQ+pNv8MD
pst1igwIUHoVbQn1VKVmsQHjbRO9dsZIS59nPal+nOX5vM2RDXnfbI9pKDNk
pcbL6g5KW1Ks/H9q1ivWifHyeYvkR2ldWLRthAsLLqv9rOKqFmtjs9enNr0g
v6Xr26cqzV/pczf3u/mOMalX3Dpqqni9O5t1Timz0pZNq9YpTV72xkLzUZE3
LUEODKoLsqlR8ryxLsh202Z5nmkO8ti6CbMlyOoc4jBPiesKPNwuv5oJ1qMT
0fXya54Jh5vzG/nK69Z3/da8u0x5iFL3HiC/6nNpfWrTvPGmPz+VmCffrLb0
8Nvdb7rHf3cDiXUFbUQznEg/Luflu5S9Sm3io2Ntj2mEz37NWuNw80HpiLq5
sXIEY6VmknVivHraaNOsePozdhGe/Ugr5Xe2bX6fts/veMf5lef/ptmvOb+r
FobKw09YHa9MfXmrrmmurU9dnj6nw59u7qMJfH7M4G6d+o5b+p3Wibe4rwlt
hMdSpsQpSf+yPapse4AibGaQ9T3BiLrDyNEN5HeMOb+jWju/5jMrlHfolMMO
8p7I+6NM0a2Hfy1vxplPmVCmu0tD5pneg1sStS58ufXsiN/O/qr2E+JWLq1P
bTRWnHir2y1d3jxef5UX96GNuJHJwZGzs3tXspygres32c1+zW/nhc2cbX4j
r8H8TjademHO75ppz5oOQQQOr2tvix0NVo70znzK1FvTLPev1nfclCnuMs3z
8h6q/bheA5fWp5ZJV36Y+1D7wSuyKt26W1fRRqCFFBZclsObvN30Dl38shi5
utFvvmU+5vBq2MvB5uTOtB77XfbSc9bprvWQr3KowXJ2hPzy/5oTqvbQm+Ly
+tRmNZd2hQx9+KW49FL3HmlU0EbgOpJ17ITc28TNW+XeyrGNfSfceh6yMsUN
nzZD7q3au3kt3LM+tb7o6CdR4TEb/nnA3Utd00YAENFGABBx7jcAiKgiAIho
IwCIaCMAiGgjAIhoIwCvVqvLSonwadslJCkjv1oyfVDF5mE+gUd0RqOhOHXF
zLkxH332YeSST7PrnR9JGwF4O13a1K5+iZcs/3xGqirMK9UbjWVHQ/oO23bR
YDRWnQ73G56Qa/dhQLQRgLfTpfnbtNGi4ue5PXotzjJNF/U5mwZ2nnS41PZi
2gjA2zXYxrIjmi69ws9UmZZg2DOxY59l9ivO0EYA3q7BNupzNgy4/f4Xwpa+
PWPUoNFLvi+2v7iNvdbcXQBoFfbHG+sY8ndM7OK7Nrvh5VvpIQCvpi/K3LWo
Z3tfoY1yHYsOLB41InRvQQOLedFGAF5Prz35Y26l1PBF6dvf3/LFgeNa+/kj
bQQAEW0EABFtBAARbQQAEW0EABFtBAARZ30DgIgqAoCINgKAiDYCgIg2AoCI
NgKAiDYCgIg2AoCINgKAiHO/AUBEFQFARBsBQEQbAUBEGwFARBsBQEQbAUBE
GwFARBsBQMS53wAgoooAIKKNACCijQAgoo0AIKKNALxarS4rJcKnbZeQpIz8
aslo1OdsHuYTeERnlMpPxQcHRWz8JCF28bz4zDLJ7ma0EYC306VN7eqXeKlW
+UqqKswr1RuNJQfH9gtKL5O/U/HzGwOf3VdsdxvaCMDb6dL8bdpYp+bCJo3/
xxcqCvaFDuvgG3G6yu5S2gjA2zXcRlnZsdBHe7S7e0TUoWJDvYva2GudHQWA
VtRwGw2FybN6d5+08uudK+cv33u5XhzpIQBvZ3+8sU7Z0Rn9pxwsMRqlwi+f
HpqQax9H2gjAq+mLMnct6tneV3xNXZWdGBq5NuGjtUuCF+y4WGN/IW0E4PX0
2pM/5lZKTV/xKtoIACLaCAAi2ggAItoIACLaCAAi2ggAIv5FDACIqCIAiGgj
AIhoIwCIaCMAiGgjAIhoIwCIaCMAiGgjAIg49xsAAODG8f8sWZ/V
   "], {{0, 0}, {436, 
   223}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{436, 223},
  PlotRange->{{0, 436}, {0, 223}}]], "Output",
 CellChangeTimes->{3.670604097980315*^9, 3.670604668860066*^9, 
  3.670604915446869*^9, 3.670604956350869*^9, 3.670604994779335*^9, 
  3.670605030947771*^9, 3.6706050635620747`*^9, 3.6706051247798643`*^9, 
  3.670605287725142*^9, 3.670608122339119*^9, 3.6706082208615713`*^9, 
  3.6706082787944517`*^9, 3.670608357248704*^9, 3.670608567212377*^9}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJzt3QlYVOXCwHHv9z33+e7zLW03Ldue/FwyNRfcQrTNvKXmzeW60zaoaGgU
dsurlomxiLhAbkQukZbRTTTrRuSakUn6gYaKS5ECGuAAMuwznPnOzBnGGV4Y
HGbgjOP/95yeR5iF887gv3fOHOftoAkeq/n3Nm3aZMv/ffmHNm1MfzYCAAAA
AAAAAABALfqCbyJDlm/5PCHq1bCUAr38jZzNw3wCj+gauKiB73gCJ4agz98Z
1Ovezt26y7o90Mv/W22t2ntfx6knQiFpk5/sN+9EhYp7bcepIRiKU1fMnBvz
0WcfRi75NLtK7X2/yplRSOWn4oODIjZ+khC7eF58Zpmk9s4rHAzBWKvLSonw
adslJCkjv1pq6Mowk7Qpk/pMOVgi/7Hk4FSfKSlyK6SqwrxSfQMXGRq4svqc
GoK8w/rLh7bvyCgxyLesyDumrVF7/xXOjsJyI09qo3NDKDsa0nfYtovy01B1
OtxveEKuh/yldG4UJQfH9gtKL5O/U/HzGwOf3Ves8t6bORiCQpc2tatf4qXa
xq4Mk9IfJnQasOGCeU6Ys3FApwmHShu/KK/xK6vIqSEoF+kL9ry3JrXIoNIe
N8SZUexPjx07ctSzshG+bW/p/MTE+Rk69fbcyqknIv/nuT16Lc6qMn9n08DO
kw57wu+S0dlfp5oLmzT+H1+oKNgXOqyDb8Rpj5j+OhiCQpfmb21jk1e+UdXm
b/e9Z1BSvulRkgp2+t3rt7NAauyipMzPG7uyipwagvUi6crhJbM+OFup1l7X
59woLv6+e11Cpk7yqHmjc0PI/knTpVf4GbklUtGeiR37LDtXrebOWzn/61R2
LPTRHu3uHhF1qNgz/mfrYAgWNm1s+so3rCup4zr2e/+8+f8aF+L7dxyXeqXx
i3Iav7KKnBpCSU1pjfLUl6fP7jc6+bKn/B44NYorRqn89Lb1yXmXvvacNjo3
BG3OhgG33/9C2NK3Z4waNHrJ98We8krOuSfCUJg8q3f3SSu/3rly/vK9lz0j
jg6GoLCdNzZ55RtWrfbbKb3H7y2WjFLxvol9A74rkRq/yND4lVXk1BCqcxJD
k85Xy23JXDnwnsGW3w8P4NQozBcZtN/Hr4gc4OMxbXRuCIb8HRO7+K7N9pDj
vVbOjaLs6Iz+5oN1UuGXTw9NyPWIODoYgsL2eGOTV76BGQr3RLzy7oZPE5bP
XXnQ/hCceJGDK6vImSFIFWc2zR4x5KH77+s9Oea4zoN+D5x6IhSVZ9aO9l3g
KW10dgiGogOLR40I3etpb406NYqq7MTQyLUJH61dErxgx0VPCb2jv6f6osxd
i3q297XOCzzzLzVwY9Nr07e/v+WLA8c95XyBG4Nee/LH3EoPmhgAAAAAHq7x
8+Q99MR+AGhxjs6T98gT+wGgFTg69d0jT+wHgJbX1KnvDk7sbwPAG7VigDyZ
o1PfHZ/Y7+xj2IzH3At+BLvkIT+CXWq5m3gpR6e+Oz6x3wOfJg/8EeySh/wI
dqnlbuK1HJz67vDEfg98mjzwR7BLHvIj2KWWuwnq8Y7H0AtG4QVDMHrFKLxg
CEZvGYW6eAwBQEQbAUBEGwFARBsBQEQbAUDEWfQAIKKKACCijQAgoo0AIKKN
ACCijQAgoo0AIKKNACCijQAg4txvABBRRQAQ0UYAENFGABDRRgAQ0UYAENFG
ABDRRgAQ0UYAEHHuNwCIqCIAiGgjAIhoIwCIaCMAiGgjAK9Wq8tKifBp2yUk
KSO/WjIa9Tmbh/kEHtHJfyr4JjJk+ZbPE6JeDUsp0NvfjDYC8Ha6tKld/RIv
1SpfSVWFeaV6o6RNmdRnysES+TslB6f6TEnR1trehjYC8Ha6NH+bNlqU/jCh
04ANF0zTRX3OxgGdJhwqtb2YNgLwdg21sTZ/u+89g5LyTd+UCnb63eu3s0Cy
ubyNvdbdYQBoBQ3OG6+kjuvY7/3z5nnjhfj+HcelXrG9mB4C8Hb2xxstarXf
Tuk9fm+xZJSK903sG/Bdie20kTYC8G76osxdi3q2963fRqPRULgn4pV3N3ya
sHzuyoNFBvsLaSMAr6fXnvwxt1Jq+opX0UYAENFGABDRRgAQ0UYAENFGABBx
1jcAiKgiAIhoIwCIaCMAiGgjAIhoIwCIaCOA607tleNJH6xaEf9VVln9D5Bw
F9oIoLUZSv7v438MuvU/73shbl/2pf1vdP7TH+98auHWoyWGpm9rcy/aQysn
Dxo5Pzlf3/SVnUYbAaigKmvxg+0GJeXXFH71wn23+0YdL7f9lBxJX1Gmq6+s
rFKYJFZnx/3lvr7z0kqd+oyda0EbAaigKiv0wTsG/fPnzyfde+dT8b9V210o
Fe2b9sTA+nyffv1YmXBHNefjB7fvveRUpZt3kH8XA8CxLelJQ+ImNG9r9E5N
bbytw+TBd907/tOLzXhNXPP77ogXRzw28sXgd1a9+3C7jsEZ5S4MsQFUEYBj
LdbG2x+cO2fC3P1F4tspBl3OL2frO/frxboX1dXZqx++te3T75+rMkrlpz4Y
2e6mXjG/1rh11LQRgAqU19Q7LhX/tGZe1N5C+5mjVHLozcnP1jfm+bBTFebL
q89G9fifu5/7QVn8qupMWLebO8x288SRNgJQgaWNBbU1F7+Y0+2BZxZu2Xvm
ms/HKT8W/L+39oq1zBRNX930wMKT7j3iSBsBqMDaxubc2JD30cPtuoVmVZm+
kLQpw++4a/yBYve+VU0bAaig8tSiru2a20ZjrTbFv/vQjy8a5D8WfjW+Y5+F
x9z8VgxtBNDqDCVHP3y5x3/f0uw2yknUHdv4j0WrVi9b9ErAkpQWOPubNgJQ
g77k7OHv86rU3o1G0UYAEHHuNwCIqCIAiGgjAIhoIwCIaCMAiGgjAK9Wq8tK
ifBp2yUkKSO/WjIa9Tmbh/kEHtHp83cG9bq3c7fusm4P9PL/Vmt3riVtBODt
dGlTu/olXrK0T6oqzCs1nyyuv3xo+44M06eNSxV5x7R2H+RDGwF4O12av00b
7egL9ry3JrVIXIyBNgLwdg7aKE8ZrxxeMuuDs/U/xaeNvZbfSQBoZQ22Uaop
rVE+uqc8fXa/0cmX7T/Hhx4C8Hb2xxstanISQ5POVxul8syVA+8ZXP9i2gjA
q+mLMnct6tneV3hNLVWc2TR7xJCH7r+v9+SY47p6H/9IGwG0NjesT224vD/q
pb/NfCtyZdT8oPlbzlY4/GRbvfbkj7mVTn34LW0EoALX1qeuLfxyTIfeUWfM
H3FWceKtPv1Ds9y8CCttBKAC19anrjy5sHvH537Smb+oPhvZo/2jKVr37iBt
BOBY+uEtcdFDmrc1eqeurU8t6X56feAjcb/VGGuLfwh7/M8394k+V930zZxB
GwE41mJtbP761DJ9/jehM+Ytfu6hm/6r04tbs93+AeK0EYAKXFqf2qS29Kfw
R2/743/c4bv8dEusrMBZ3wBU4NL61EZj9fn4Ee1u7j7jkzM5KQvGBKw/Ve7e
FViZNwJQhUvrUxsNuR/2v6Pnql9Mxxilot3PPDA8RevmONJGACpwbX1qY+mh
6Q899tnvplvX5m8f2nX8/mLaCOA65471qa8cjZs3LzI2NmphoCY02f0LVNNG
AGpgfWoAuP7QRgAQ0UYAENFGABBx7jcAiKgiAIhoIwCIaCMAiGgjAIhoIwCI
aCMAiGgjAIhoIwCIaCOA1uaG9alN9/L7Z8P6BGeUt8w+8u9iAKjAtfWpFYaL
Hw/t+8bPFcaWQBUBqMC19aktDLkJj/d/+1RlS+wgbQTgWPqW3XFDXmve1uid
urY+dR19zoZHBoafaaF1BlvgXgF4jxZro0vrUytqzq8f7Lv8l2rhHlxGGwGo
wOX1qS1qst/z81udXdP4T6rVZaVE+LTtEpKUkV8tmeaam4f5BB7RWX+YNvnJ
fvNO1L9n2ghABS6uT31V9S8rBj0Sf8Hhy3Jd2tSufomXLHcvVRXmlV69Pm0E
4DlcWp+6puRskXWmWH12qe8TCbmOTv/RpfnbtNGyA+dix44cZZqPjvBte0vn
JybOz9DZXk4bAajApfWpa37b+PyCraknf8k2yfp2Tp8nP73kII4NtdGoz9+9
LiFTJzFvBOAhXF6fWp/7od/Nf7Cent3m324b+oWDu2qwjfKr6fLT29Yn5136
upE22mrWbgKAs1pzfWr74422DNrv41dEDvBh3gjgBqMvyty1qGd73wbbKKs8
s3a07wLaCODGo9ee/DG3Umr6ilfRRgAQ0UYAENFGABDRRgAQ0UYAENFGABBx
1jcAiKgiAIhoIwCIaCMAiGgjAIjkNq6ZPspme/a9gHHWLTbgb6s0E63bSs3k
5Rp/6xateW6p5kXrFql5KTxgmmWbNj1sxizLFhgUHvSqZZszN+r1+coWPe/t
1UuilG195Ipt8QnKlvRR4uHvDinbifTjaj9CANzNHetTGy4fiHphSvCi6OjF
wRHJFx0sitA8chvj5gy5PrbZj8S9PFTZ1s96cl3g03XbcGvb3wsYq1Q9RjOh
Xs+jNf7WjEfUNTxsWmD9gM9+zVrv2HfClXRvWrVO6fYX2z5Xon0kNc3dTwVw
I3FxferqX2L87hvyfrZpEa3yY2/28Vtxzs3raclttE7e5C3mrTBrGeQt8rU3
rk75gl4Nmznn6mxQ3qYFXp0oBkyLCNBY4xOled46vVyhmWKdecZoxlsnpaun
jbE2be2MZ6ytWz/zL9YGxgU9rn6Tm9xefqKu2MPqRjHCJteW8cYEWHK9oi7X
UZoXbOfbYdOVUL+sPNoRwa8rz8Lq0KXyUxO/LEbp8/6v98hxPn4k3b2/CUCr
cm196orMv3e+49HPf1daeeXgyLs6vnKs3K07eB0dbywpLra+1pb7YH0NvmXd
Rmvbo15foPREfvFu6fmsup5Pn2XNuLXhyzTPiQG31mzN9L8qfVs3Y4TQ7SfU
b7KyBT2m7JIlyzMsWX5v2ljboyLyAG0nz5EaTV2Q7abNka+9KT96y/6+QHk8
N6xYqzzIh/anyg/7mRNZav8WQAVbt6Q/OiSueVujd+rS+tT6nI39brs/KMNS
w9JD4+687ZFvtM0fYgM499t18hROKfa/PtullOTD2DibXFsm4RGzQ+pNv8MD
pst1igwIUHoVbQn1VKVmsQHjbRO9dsZIS59nPal+nOX5vM2RDXnfbI9pKDNk
pcbL6g5KW1Ks/H9q1ivWifHyeYvkR2ldWLRthAsLLqv9rOKqFmtjs9enNr0g
v6Xr26cqzV/pczf3u/mOMalX3Dpqqni9O5t1Timz0pZNq9YpTV72xkLzUZE3
LUEODKoLsqlR8ryxLsh202Z5nmkO8ti6CbMlyOoc4jBPiesKPNwuv5oJ1qMT
0fXya54Jh5vzG/nK69Z3/da8u0x5iFL3HiC/6nNpfWrTvPGmPz+VmCffrLb0
8Nvdb7rHf3cDiXUFbUQznEg/Luflu5S9Sm3io2Ntj2mEz37NWuNw80HpiLq5
sXIEY6VmknVivHraaNOsePozdhGe/Ugr5Xe2bX6fts/veMf5lef/ptmvOb+r
FobKw09YHa9MfXmrrmmurU9dnj6nw59u7qMJfH7M4G6d+o5b+p3Wibe4rwlt
hMdSpsQpSf+yPapse4AibGaQ9T3BiLrDyNEN5HeMOb+jWju/5jMrlHfolMMO
8p7I+6NM0a2Hfy1vxplPmVCmu0tD5pneg1sStS58ufXsiN/O/qr2E+JWLq1P
bTRWnHir2y1d3jxef5UX96GNuJHJwZGzs3tXspygres32c1+zW/nhc2cbX4j
r8H8TjademHO75ppz5oOQQQOr2tvix0NVo70znzK1FvTLPev1nfclCnuMs3z
8h6q/bheA5fWp5ZJV36Y+1D7wSuyKt26W1fRRqCFFBZclsObvN30Dl38shi5
utFvvmU+5vBq2MvB5uTOtB77XfbSc9bprvWQr3KowXJ2hPzy/5oTqvbQm+Ly
+tRmNZd2hQx9+KW49FL3HmlU0EbgOpJ17ITc28TNW+XeyrGNfSfceh6yMsUN
nzZD7q3au3kt3LM+tb7o6CdR4TEb/nnA3Utd00YAENFGABBx7jcAiKgiAIho
IwCIaCMAiGgjAIhoIwCvVqvLSonwadslJCkjv1oyfVDF5mE+gUd0RqOhOHXF
zLkxH332YeSST7PrnR9JGwF4O13a1K5+iZcs/3xGqirMK9UbjWVHQ/oO23bR
YDRWnQ73G56Qa/dhQLQRgLfTpfnbtNGi4ue5PXotzjJNF/U5mwZ2nnS41PZi
2gjA2zXYxrIjmi69ws9UmZZg2DOxY59l9ivO0EYA3q7BNupzNgy4/f4Xwpa+
PWPUoNFLvi+2v7iNvdbcXQBoFfbHG+sY8ndM7OK7Nrvh5VvpIQCvpi/K3LWo
Z3tfoY1yHYsOLB41InRvQQOLedFGAF5Prz35Y26l1PBF6dvf3/LFgeNa+/kj
bQQAEW0EABFtBAARbQQAEW0EABFtBAARZ30DgIgqAoCINgKAiDYCgIg2AoCI
NgKAiDYCgIg2AoCINgKAiHO/AUBEFQFARBsBQEQbAUBEGwFARBsBQEQbAUBE
GwFARBsBQMS53wAgoooAIKKNACCijQAgoo0AIKKNALxarS4rJcKnbZeQpIz8
aslo1OdsHuYTeERnlMpPxQcHRWz8JCF28bz4zDLJ7ma0EYC306VN7eqXeKlW
+UqqKswr1RuNJQfH9gtKL5O/U/HzGwOf3VdsdxvaCMDb6dL8bdpYp+bCJo3/
xxcqCvaFDuvgG3G6yu5S2gjA2zXcRlnZsdBHe7S7e0TUoWJDvYva2GudHQWA
VtRwGw2FybN6d5+08uudK+cv33u5XhzpIQBvZ3+8sU7Z0Rn9pxwsMRqlwi+f
HpqQax9H2gjAq+mLMnct6tneV3xNXZWdGBq5NuGjtUuCF+y4WGN/IW0E4PX0
2pM/5lZKTV/xKtoIACLaCAAi2ggAItoIACLaCAAi2ggAIv5FDACIqCIAiGgj
AIhoIwCIaCMAiGgjAIhoIwCIaCMAiGgjAIg49xsAAODG8f8sWZ/V
    "], {{0, 0}, {436, 
    223}}, {0, 255},
    ColorFunction->RGBColor], RasterBox[CompressedData["
1:eJzt3QlYVOXCwHHv9z33+e7zLW03Ldue/FwyNRfcQrTNvKXmzeW60zaoaGgU
dsurlomxiLhAbkQukZbRTTTrRuSakUn6gYaKS5ECGuAAMuwznPnOzBnGGV4Y
HGbgjOP/95yeR5iF887gv3fOHOftoAkeq/n3Nm3aZMv/ffmHNm1MfzYCAAAA
AAAAAABALfqCbyJDlm/5PCHq1bCUAr38jZzNw3wCj+gauKiB73gCJ4agz98Z
1Ovezt26y7o90Mv/W22t2ntfx6knQiFpk5/sN+9EhYp7bcepIRiKU1fMnBvz
0WcfRi75NLtK7X2/yplRSOWn4oODIjZ+khC7eF58Zpmk9s4rHAzBWKvLSonw
adslJCkjv1pq6Mowk7Qpk/pMOVgi/7Hk4FSfKSlyK6SqwrxSfQMXGRq4svqc
GoK8w/rLh7bvyCgxyLesyDumrVF7/xXOjsJyI09qo3NDKDsa0nfYtovy01B1
OtxveEKuh/yldG4UJQfH9gtKL5O/U/HzGwOf3Ves8t6bORiCQpc2tatf4qXa
xq4Mk9IfJnQasOGCeU6Ys3FApwmHShu/KK/xK6vIqSEoF+kL9ry3JrXIoNIe
N8SZUexPjx07ctSzshG+bW/p/MTE+Rk69fbcyqknIv/nuT16Lc6qMn9n08DO
kw57wu+S0dlfp5oLmzT+H1+oKNgXOqyDb8Rpj5j+OhiCQpfmb21jk1e+UdXm
b/e9Z1BSvulRkgp2+t3rt7NAauyipMzPG7uyipwagvUi6crhJbM+OFup1l7X
59woLv6+e11Cpk7yqHmjc0PI/knTpVf4GbklUtGeiR37LDtXrebOWzn/61R2
LPTRHu3uHhF1qNgz/mfrYAgWNm1s+so3rCup4zr2e/+8+f8aF+L7dxyXeqXx
i3Iav7KKnBpCSU1pjfLUl6fP7jc6+bKn/B44NYorRqn89Lb1yXmXvvacNjo3
BG3OhgG33/9C2NK3Z4waNHrJ98We8krOuSfCUJg8q3f3SSu/3rly/vK9lz0j
jg6GoLCdNzZ55RtWrfbbKb3H7y2WjFLxvol9A74rkRq/yND4lVXk1BCqcxJD
k85Xy23JXDnwnsGW3w8P4NQozBcZtN/Hr4gc4OMxbXRuCIb8HRO7+K7N9pDj
vVbOjaLs6Iz+5oN1UuGXTw9NyPWIODoYgsL2eGOTV76BGQr3RLzy7oZPE5bP
XXnQ/hCceJGDK6vImSFIFWc2zR4x5KH77+s9Oea4zoN+D5x6IhSVZ9aO9l3g
KW10dgiGogOLR40I3etpb406NYqq7MTQyLUJH61dErxgx0VPCb2jv6f6osxd
i3q297XOCzzzLzVwY9Nr07e/v+WLA8c95XyBG4Nee/LH3EoPmhgAAAAAHq7x
8+Q99MR+AGhxjs6T98gT+wGgFTg69d0jT+wHgJbX1KnvDk7sbwPAG7VigDyZ
o1PfHZ/Y7+xj2IzH3At+BLvkIT+CXWq5m3gpR6e+Oz6x3wOfJg/8EeySh/wI
dqnlbuK1HJz67vDEfg98mjzwR7BLHvIj2KWWuwnq8Y7H0AtG4QVDMHrFKLxg
CEZvGYW6eAwBQEQbAUBEGwFARBsBQEQbAUDEWfQAIKKKACCijQAgoo0AIKKN
ACCijQAgoo0AIKKNACCijQAg4txvABBRRQAQ0UYAENFGABDRRgAQ0UYAENFG
ABDRRgAQ0UYAEHHuNwCIqCIAiGgjAIhoIwCIaCMAiGgjAK9Wq8tKifBp2yUk
KSO/WjIa9Tmbh/kEHtHJfyr4JjJk+ZbPE6JeDUsp0NvfjDYC8Ha6tKld/RIv
1SpfSVWFeaV6o6RNmdRnysES+TslB6f6TEnR1trehjYC8Ha6NH+bNlqU/jCh
04ANF0zTRX3OxgGdJhwqtb2YNgLwdg21sTZ/u+89g5LyTd+UCnb63eu3s0Cy
ubyNvdbdYQBoBQ3OG6+kjuvY7/3z5nnjhfj+HcelXrG9mB4C8Hb2xxstarXf
Tuk9fm+xZJSK903sG/Bdie20kTYC8G76osxdi3q2963fRqPRULgn4pV3N3ya
sHzuyoNFBvsLaSMAr6fXnvwxt1Jq+opX0UYAENFGABDRRgAQ0UYAENFGABBx
1jcAiKgiAIhoIwCIaCMAiGgjAIhoIwCIaCOA607tleNJH6xaEf9VVln9D5Bw
F9oIoLUZSv7v438MuvU/73shbl/2pf1vdP7TH+98auHWoyWGpm9rcy/aQysn
Dxo5Pzlf3/SVnUYbAaigKmvxg+0GJeXXFH71wn23+0YdL7f9lBxJX1Gmq6+s
rFKYJFZnx/3lvr7z0kqd+oyda0EbAaigKiv0wTsG/fPnzyfde+dT8b9V210o
Fe2b9sTA+nyffv1YmXBHNefjB7fvveRUpZt3kH8XA8CxLelJQ+ImNG9r9E5N
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
cm196orMv3e+49HPf1daeeXgyLs6vnKs3K07eB0dbywpLra+1pb7YH0NvmXd
Rmvbo15foPREfvFu6fmsup5Pn2XNuLXhyzTPiQG31mzN9L8qfVs3Y4TQ7SfU
b7KyBT2m7JIlyzMsWX5v2ljboyLyAG0nz5EaTV2Q7abNka+9KT96y/6+QHk8
N6xYqzzIh/anyg/7mRNZav8WQAVbt6Q/OiSueVujd+rS+tT6nI39brs/KMNS
w9JD4+687ZFvtM0fYgM499t18hROKfa/PtullOTD2DibXFsm4RGzQ+pNv8MD
pst1igwIUHoVbQn1VKVmsQHjbRO9dsZIS59nPal+nOX5vM2RDXnfbI9pKDNk
pcbL6g5KW1Ks/H9q1ivWifHyeYvkR2ldWLRthAsLLqv9rOKqFmtjs9enNr0g
v6Xr26cqzV/pczf3u/mOMalX3Dpqqni9O5t1Timz0pZNq9YpTV72xkLzUZE3
LUEODKoLsqlR8ryxLsh202Z5nmkO8ti6CbMlyOoc4jBPiesKPNwuv5oJ1qMT
0fXya54Jh5vzG/nK69Z3/da8u0x5iFL3HiC/6nNpfWrTvPGmPz+VmCffrLb0
8Nvdb7rHf3cDiXUFbUQznEg/Luflu5S9Sm3io2Ntj2mEz37NWuNw80HpiLq5
sXIEY6VmknVivHraaNOsePozdhGe/Ugr5Xe2bX6fts/veMf5lef/ptmvOb+r
FobKw09YHa9MfXmrrmmurU9dnj6nw59u7qMJfH7M4G6d+o5b+p3Wibe4rwlt
hMdSpsQpSf+yPapse4AibGaQ9T3BiLrDyNEN5HeMOb+jWju/5jMrlHfolMMO
8p7I+6NM0a2Hfy1vxplPmVCmu0tD5pneg1sStS58ufXsiN/O/qr2E+JWLq1P
bTRWnHir2y1d3jxef5UX96GNuJHJwZGzs3tXspygres32c1+zW/nhc2cbX4j
r8H8TjademHO75ppz5oOQQQOr2tvix0NVo70znzK1FvTLPev1nfclCnuMs3z
8h6q/bheA5fWp5ZJV36Y+1D7wSuyKt26W1fRRqCFFBZclsObvN30Dl38shi5
utFvvmU+5vBq2MvB5uTOtB77XfbSc9bprvWQr3KowXJ2hPzy/5oTqvbQm+Ly
+tRmNZd2hQx9+KW49FL3HmlU0EbgOpJ17ITc28TNW+XeyrGNfSfceh6yMsUN
nzZD7q3au3kt3LM+tb7o6CdR4TEb/nnA3Utd00YAENFGABBx7jcAiKgiAIho
IwCIaCMAiGgjAIhoIwCvVqvLSonwadslJCkjv1oyfVDF5mE+gUd0RqOhOHXF
zLkxH332YeSST7PrnR9JGwF4O13a1K5+iZcs/3xGqirMK9UbjWVHQ/oO23bR
YDRWnQ73G56Qa/dhQLQRgLfTpfnbtNGi4ue5PXotzjJNF/U5mwZ2nnS41PZi
2gjA2zXYxrIjmi69ws9UmZZg2DOxY59l9ivO0EYA3q7BNupzNgy4/f4Xwpa+
PWPUoNFLvi+2v7iNvdbcXQBoFfbHG+sY8ndM7OK7Nrvh5VvpIQCvpi/K3LWo
Z3tfoY1yHYsOLB41InRvQQOLedFGAF5Prz35Y26l1PBF6dvf3/LFgeNa+/kj
bQQAEW0EABFtBAARbQQAEW0EABFtBAARZ30DgIgqAoCINgKAiDYCgIg2AoCI
NgKAiDYCgIg2AoCINgKAiHO/AUBEFQFARBsBQEQbAUBEGwFARBsBQEQbAUBE
GwFARBsBQMS53wAgoooAIKKNACCijQAgoo0AIKKNALxarS4rJcKnbZeQpIz8
aslo1OdsHuYTeERnlMpPxQcHRWz8JCF28bz4zDLJ7ma0EYC306VN7eqXeKlW
+UqqKswr1RuNJQfH9gtKL5O/U/HzGwOf3VdsdxvaCMDb6dL8bdpYp+bCJo3/
xxcqCvaFDuvgG3G6yu5S2gjA2zXcRlnZsdBHe7S7e0TUoWJDvYva2GudHQWA
VtRwGw2FybN6d5+08uudK+cv33u5XhzpIQBvZ3+8sU7Z0Rn9pxwsMRqlwi+f
HpqQax9H2gjAq+mLMnct6tneV3xNXZWdGBq5NuGjtUuCF+y4WGN/IW0E4PX0
2pM/5lZKTV/xKtoIACLaCAAi2ggAItoIACLaCAAi2ggAIv5FDACIqCIAiGgj
AIhoIwCIaCMAiGgjAIhoIwCIaCMAiGgjAIg49xsAAODG8f8sWZ/V
    "], {{0, 0}, {436, 
    223}}, {0, 255},
    ColorFunction->RGBColor]},
  ImageSize->{436, 223},
  PlotRange->{{0, 436}, {0, 223}}]], "Output",
 CellChangeTimes->{3.670604097980315*^9, 3.670604668860066*^9, 
  3.670604915446869*^9, 3.670604956350869*^9, 3.670604994779335*^9, 
  3.670605030947771*^9, 3.6706050635620747`*^9, 3.6706051247798643`*^9, 
  3.670605287725142*^9, 3.670608122339119*^9, 3.6706082208615713`*^9, 
  3.6706082787944517`*^9, 3.670608357248704*^9, 3.6706085672335777`*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
ijt1C6dzDXf2Ku6cIe7ChcALl4OuXAw2NiTcNCKaXg2/ZxL16Drpyc0E5wcp
7lZpnvZZvs5F4f5YKyYFkFOIWHuWS6rIwFWk4tprcgfayFgb6q4V/RRD8Uuf
o4g35sIMCuR1GpsNRxetp3WyO6IheXNtzRcVZuN//Mn02inT4tlXp1N4jJG+
npf19o/9MKhmD/j8499+phXYuyR8fDzo4Ls/+tizfyu38t8BAIAVWwgSScDG
1MnjtFpfc6fC6RcrR8Ec+d6ZIy87pm/XgU0Rsnuc/vyv/3W2ElvwvtRt9+GP
f2si4cIxjyCcpy6J8t3c5Vv8Cm/lcmlfy+PxuwamE3PbbP0KdUyjVXRwWEPX
in69ibb+5Rr6+G+NwtDbGVom3XmaaeVT4EYow8fWRGc0pRd3omtrW0abOsc7
+6cHRmcpk3Tq3OL8whJ3AwsUxT9lBn2ut6W2JoeUFWIb43CBYH4Yd00Vd01l
rYaufekjAdfUfEx2e5toipqr8X7Xq69pblf3o8s9ruxHzXOlef3QvI2EzWe1
afkaafld2ed/VVPUAq5qomsDVn4h3nAmauv0dp1ub7xt5VoZvvVa19pfuLjp
fyzSspqNU3zOWOq1D/9w6GFEYfeG1+Mwm278v3/72Gu1UhT+14/+8LBd4ve7
ZRVQMnzrta6dml0oqR3wi6oytkrZcz5YPLW0LhD078bdtEtH13qFVUakNmSV
dpEbhlB+oqtQQK3TpmeZg6O01p7J6qYRdHlKQTu6HBddHUCqdsKXPHDLOXUj
SkM/aJ9BiKru5nMVNTXdwAOXQl9tBy8R0LU3rtyyNNJxM9Z69d9OwDVVD+O9
9leOPjTUuX3p4pUL1y4a3D73/T2d8w9PnrNC1x4467L/rKumrreGrs/L73vW
T0XfV8XAU+WCh4qhi4qRk4qxg8p1W5UbNio3rdVMhZdrmFrvummjZmKrYmSr
ctle9dJKu2CvamCvet5e9ZyD6llHVV0nVR1n1dMuqqdc1U6479PxPXoOj67V
Nwm/eDvy+qO425bx5vbJj56mXzGL0TEi3nmS7B1YGhBSHh5TQ0qoz8zqxFpJ
WX9p2QBq6NqGxjHx1tMzQ6HQxRudzpqfX3q1oWtf/aBs/3JK+9rtJsrGzVzM
o4T/490PrVf2EBHuSbT/5788WUKT+FQ1ZCMKt5D4ZyigxP/Jo5jSM4uxDyhC
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
AAAAAAAAAAAAAAAAgHX8f+p5Mes=
   "], {{0, 0}, {436, 222}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{436, 222},
  PlotRange->{{0, 436}, {0, 222}}]], "Output",
 CellChangeTimes->{3.670604097980315*^9, 3.670604668860066*^9, 
  3.670604915446869*^9, 3.670604956350869*^9, 3.670604994779335*^9, 
  3.670605030947771*^9, 3.6706050635620747`*^9, 3.6706051247798643`*^9, 
  3.670605287725142*^9, 3.670608122339119*^9, 3.6706082208615713`*^9, 
  3.6706082787944517`*^9, 3.670608357248704*^9, 3.670608567345463*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6706083892092743`*^9, 3.670608390853633*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p1", "=", 
  RowBox[{"Rasterize", "[", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.0", "/", 
            RowBox[{"\[Mu]Vector", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"freeE", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Dimensions", "[", "\[Mu]Vector", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<k=6\>\"", ",", "\"\<k=7\>\"", ",", "\"\<k=8\>\"", ",", 
        "\"\<k=9\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.47", ",", "1.49"}], "}"}]}], "}"}]}]}], "]"}], 
   "]"}]}], "\n", 
 RowBox[{"p2", "=", 
  RowBox[{"Rasterize", "[", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.0", "/", 
            RowBox[{"\[Mu]Vector", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"freeE2", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Dimensions", "[", "\[Mu]Vector", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{
          RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<k=6\>\"", ",", "\"\<k=7\>\"", ",", "\"\<k=8\>\"", ",", 
        "\"\<k=9\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.47", ",", "1.49"}], "}"}]}], "}"}]}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Rasterize", "[", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1.0", "/", 
           RowBox[{"\[Mu]Vector", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"freeEratio", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Dimensions", "[", "\[Mu]Vector", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{
         RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<k=6\>\"", ",", "\"\<k=7\>\"", ",", "\"\<k=8\>\"", ",", 
       "\"\<k=9\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.670604593425399*^9, 3.6706045949148808`*^9}, {
  3.6706048871887074`*^9, 3.6706048940689983`*^9}, {3.670608385889276*^9, 
  3.670608405270071*^9}, {3.670608583417597*^9, 3.670608663799213*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3QlUU3e+B3DnvTPnzZn3Xus4o47T1lOLWketKII2UpdxqYr6VKg7rcoq
gmKxtRSsVpBFlEVUFqmoqKi0itQNEUWLuGAdUEEBUZRFZAlbgIQsN+8mN0Dg
shiy3Jvw/RzqIbk3l19S/Hpz8///f0NsXC1t/rNPnz4F5H8X/tCnj+x7KQAA
AAAAAAAAAAAAALCWqPyKv1vg8TMxAZt8kspF5B1FR2aZOP7O62BTB/foTfGi
sgRn4w+GjRxFGvmxsfVVroTp6lV88SkEN3GmqXt2I4NVK6hUvLg6LWjd5r3H
fj7q7326QMB07SoVTzQ8jXJ19os+GRO6wz0qq55gcfFSCS8nyc+k/3C3+Myy
JqKjneHtENyk5eNWptaQ39akrjJZmUQmBiGoKKkTdbBJ3MHOelM8Waqo8s7Z
c5k1YvKRjSUPuUJGi+9B/YoHsSMbVSu+/oHb+FmnXpMvvSDX13xuTDGzf0dV
K74m1dLUOaOevKfx8ZaJC1OqGa29q+IpvPRVI8zjSiWd7Qxvpe720qETDhXK
zwmLoicMXXqnrvNNJZ3vzAiViqc2icqv7TuQViVmqOK2VKn/Rkao5bwFC0kW
nP59h01f5pHJY67yjirs6sUve7x5tPGOHIH8nsMThy2/p0+/OcLCwzbWsYWN
5Sles4Zw/HIZPuvtongKL926JRu73Rk6ISk7y3l/UnyZ7GUkyhPMPzBPKCc6
2xSfdaazndlffMsmovaet9NPz/hMVd1Ktfpfv0kOj8niESw5b1St+IL7NsON
ffPIUCGqri0zGrc7v0l/ipdtqn/oNXX0gPcsAu5UM/3vahfFKyhlY/c7Q2dq
06yMTA++kv+zUhhlZmSVVtv5pqLOd2aESsXXCOuE1G9FQ4aL6aLESuZ/RVSq
v1ZKNOSeikgsKb3MhmxUrXhu0aEJf/twtc+ubQ4LJi3yvlXN8Bs71V55cUWi
09hRy4MvJwR7BF6vZDocuyieonze2O3O0BkJ9+rKsUuuVxNSojpl2Xjb32qI
zjeJO9+ZESoV31QU5xX/qolMmKzgie9/pvjVYZRK9cs3ibm3ooL8J5iwIBtV
K15cdm7ZcE5YAePXeCmqFV//wMFMfsmOqLgwZ0ZMMcPh2EXxFOXrjd3uDJ0T
V1zz27jz0OmYwM3BqW0vxNE3dbEzI1QpnmjMO+xiMfmTDwePXbH3EY8VvyIq
vfgUfl7YIo4n89moavHiqps7Flh4XWfJJ6UqFS8oiPPyD4s5Fubt6nnuNfP5
3tVfQ1FV1vntYwZxWv7xZ9vfWQCgEXEzzh48/uvNR8yPETBoIu6Tu8V8Vvzr
DwAAAACgB9qPhFcaJC/XbtRHwyOP2Z6PWq5XYdg8ABgs5U+mpG0HydNnUvCf
eM/dktGg2IZh8wBgsJRHNDUT5Hc2k0KQt8di0335DQybBwAD1lE2SkVlnc2k
EL4Im+9yt677YfN9AEAP6SR29EKH2SjtfCaF6FX0QsdbNd0Om1f1Rdbq/qwq
hm37s6oYtu3PqmJYuL9Ba3u9UVmbmRSNLy9nUPNBxSWxVnY3qoluhs2z6n8i
q4ph2/6sKoZt+7OqGBbub7hoI+HbaZ1JIam8vGT4RyPHGBsbjxkxaLDltSqi
62HzrPqfyKpi2LY/q4ph2/6sKoaF+xs2LY2E1+sXWa+Ll+p5/SieQfpev17A
iwwAQIdsBACgQzYCANAhGwEA6JCNAAB0GGYPAECHVAQAoEM2AgDQIRsBAOiQ
jQAAdMhGAAA6ZCMAAB2yEQCADtkIAECHbAQAoMO8GAAAOqQiAAAdshEAgA7Z
CABAh2wEAKBDNgIA0CEbAQDokI0AAHTIRgAAOmQjAAAd5sUAANAhFQEA6JCN
AAB0yEYAADpkIwAAHbIRAIAO2QgAQIdsBACgQzYCANAhGwEA6DAvBgCADqkI
AECHbAQAoEM2AgDQIRsBAOiQjQCgzyS8nCQ/k/7D3eIzy5oIqVRUdGSWiePv
vObtBDdxpql7dqPiZsMjj9mejxS3+Hm75phNX70zJu5U7KX8BkL5uMhGANBz
vPRVI8zjSiXULUJQUVInatnYLhul/Cfec7dkNCg2igVieSIKX0R+4XGfp3RQ
ZCMA6DleurVSNlIE+aGW8xYsJFlw+vcdNn2ZR6Yi+QR5eyw2tYlBElF5cc4k
n1xB6z3IRgDQcx1lo1RUlhwek8Uj2p83ys4Rw+a73K1rvYPgv0z42vgjq0sV
Sofo05aWnwIAgMZ1mI1k5DXknopILCm93C4bpaJX0Qsdb9WQ3wlfn9m0ePKo
gf0+XuR9vVKs/GjkIQDoubbXG5WJubeigvwnmMizsfHl5Yxqef6JS2Kt7G5U
E1JpU364tX9amZCgPRTZCAD6TFSVdX77mEGcDrNRKvssOmwRx1OWjZLKy0uG
fzRyjLGx8ZgRgwZbXqsiE5GoSrE3G2ZkZDTczC6Z2/Y9tY6eAQDA25HUPor/
KSQo6mJOfceB146I++RuMZ9+7qcKQlBZ3IBsBADtEdf8O/b7SX/58+DVkSkF
pTe2DPvTH/8+e+uJBzXi7h+rdBTuneAVk+Z5JJaJut9Z85CNAKB5gpwd/xww
Kb5MWHFx9eC/cQIetRlYTYga63nt1dfzaSeJTQWRnw8e755ep945YU8gGwFA
8wQ5Xv8cOOmXx2eWf/D32VEvm9psJKpS7KZPbI8z55uH9bQDCV9FfTZorPdT
vq4qb4ZsBOjljmfET45c2rOvTg8qy8Z+Q1Z89o8Plpx+3YP3xMI3yX5rLKbN
W+P6Y8jOTwcYuWY2qPEUewLZCNDLaS0b//bPzRuWbr5RRf84Rcwrev6svfwX
r5vfVDcV7P/0L/3nHMwXSImGpz/NG/CO8d4XQm29AB1DNgKA5lHvqc+VVt8/
4B5wvaLtmSNRc+e7FQvbW/yVz1NqhHbTs4DR//vel7drqUPl+Yx8d4iLrk8c
MSMGADRPkY3lEuHrXzeM/Hj+1uPX895uPA6p4aHrR38xDlWcKcpuvfPx1ic6
vuKIVAQAzWvJxp48WFxy7NMBI71y5Cs/ENykuQP/seRmtY4/qkY2AoDm8Z9u
HzGgp9kolXCTrEfNiH0tJr+tuLjEaNzWh7r+KAbZCACaJq55cHT96P/p2+Ns
lK1Y+zD6++0h+3dv32jrncTE6G9kIwBogajm2b1bJYLud2QrZCMAAB2yEQCA
DtkIAECHbAQAoEM2AgDQYV4MAAAdUhEAgA7ZCABAh2wEAKBDNgIA0CEbAQDo
kI0AAHTIRgAAOmQjAGiYBvpTiytvBKz9Yt0P/sEBHs4ex5816rwJK7IRADRP
vf7UkooLi4eMDciTL3HWmP3DODOvHF03YcW8GADQPPX6U/OfbB1l9OV9nvxG
0zP/0YOmJnF1/AyQigC9XMa945F7Jvfsq9ODqtefmuDd/2bilMiXQqmk+rbP
v/767rg9+U3dP0yjkI0AvZzWsrHn/alJorIrXg7uO7785J3/HrrmRIHuFxBH
NgKA5qnVn1pGUnffd2q/P/7XQE5gLiOdFZCNAKB5avWnlkqbXkVZDHh3lMPJ
vKIkz8W2EU8b8Dk1ABgAtfpTS8XFR80Gjgl5LrvGSFQlz/94bhJX1+GIbAQA
zVOvP7W07o79J9N+fiN7tKTs7IwRS25UIxsBQM9poj917YNId3f/0NCArY42
XokMNKhGNgKAFhhCf2qM/QYAaAepCABAh2wEAKBDNgIA0CEbAQDokI0AAHTI
RgDQWxJeTpKfSf/hbvGZZU2EVCoqOjLLxPF3XvN2gps409Q9WzZNm2h4GuXq
7Bd9MiZ0h3tUVr1s7/Ir/m6Bx8/EBGzySSpvN4QS2QgA+oyXvmqEeVypYpA5
IagoqWtNOaVsrEm1NHXOkC0Q2fh4y8SFKdUEN2n5uJWpNfJtq0xWJnHbDFRH
NgKAPuOlWytlI0WQH2o5b4FscR8LTv++w6Yv88jkCQsP21jHFjaWp3jNGsLx
yxXU3V46dMKhQlmQioqiJwxdeqdO+RjIRgDQZx1lo1RUlhwek8UjlM4bSfUP
vaaOHvCeRcCdarFsnjbn/UnxZbIHEuUJ5h+YJ5Qrz9nu05bOng8AgCZ0mI2y
y4u5pyISS0ovN2ejuCLRaeyo5cGXE4I9Aq9XiqW1aVZGpgdfyc8bC6PMjKzS
apUPgDwEAH3W9nqjMjH3VlSQ/wQTKhvrHziYya8uEhUX5syIKRZLuFdXjl1y
vZqQEtUpy8bb/lbTZqkfMhuf5z7T0ZMAANAkUVXW+e1jBnE6zEYSPy9sEceT
ek8tKIjz8g+LORbm7ep57rVQKjuVvOa3ceeh0zGBm4NTq9o1iCWzMdzBwmed
S11VtbafBgD0ChroTy07ypufZ41zzWzobj8R98ndYr7Gl3ckszFyw2TyK8xh
ns/6jY113RYCANAd9fpTU8SvY2eM3/K4UcoIMht9HZwi1n2uSEj7BYHfbWWm
FAAwGOr1p1YQF8f8y2zbU74uC29BfRbzprTCz94pwmmWLCFdpvjbrC0tLGak
HgDQsYzjyZGTv+7ZV6cHVa8/dTNR0aEpE33zGO8z+Kbkjb/tmsgNU8iEPGD/
fz/tDmGiIgDQKa1lo1r9qSnCVxGfcQKfN9GOoH30MTx7d/iFr5stO4F0nuZj
5yCoZ+aEFgD0mNr9qRWEBfvMzfcXCHVWeIsOxzfmZucF2q6grkCG2lr9ejxO
94UBgB5Tsz91q6bnQZOmRBUy0kursxkx/pu+jVg/g4xH8k8fpw2EROfNswFA
T6nVn1pY86yq5Uyx6dkuzvSYYpWG/2hC1/Niki8lh9pZUieQQTYr7t+8rbPC
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
   "], {{0, 0}, {436, 
   223}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{436, 223},
  PlotRange->{{0, 436}, {0, 223}}]], "Output",
 CellChangeTimes->{
  3.670604595892701*^9, 3.6706046754306517`*^9, {3.670604888211872*^9, 
   3.670604894469328*^9}, {3.670608397749814*^9, 3.6706084058362627`*^9}, {
   3.670608618885976*^9, 3.670608664806329*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
AAAAAEC//h+5PFVW
   "], {{0, 0}, {436, 223}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{436, 223},
  PlotRange->{{0, 436}, {0, 223}}]], "Output",
 CellChangeTimes->{
  3.670604595892701*^9, 3.6706046754306517`*^9, {3.670604888211872*^9, 
   3.670604894469328*^9}, {3.670608397749814*^9, 3.6706084058362627`*^9}, {
   3.670608618885976*^9, 3.670608664916835*^9}}],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJzt3QlUU3e+B3DnvTPnzZn3Xus4o47T1lOLWketKII2UpdxqYr6VKg7rcoq
gmKxtRSsVpBFlEVUFqmoqKi0itQNEUWLuGAdUEEBUZRFZAlbgIQsN+8mN0Dg
shiy3Jvw/RzqIbk3l19S/Hpz8///f0NsXC1t/rNPnz4F5H8X/tCnj+x7KQAA
AAAAAAAAAAAAALCWqPyKv1vg8TMxAZt8kspF5B1FR2aZOP7O62BTB/foTfGi
sgRn4w+GjRxFGvmxsfVVroTp6lV88SkEN3GmqXt2I4NVK6hUvLg6LWjd5r3H
fj7q7326QMB07SoVTzQ8jXJ19os+GRO6wz0qq55gcfFSCS8nyc+k/3C3+Myy
JqKjneHtENyk5eNWptaQ39akrjJZmUQmBiGoKKkTdbBJ3MHOelM8Waqo8s7Z
c5k1YvKRjSUPuUJGi+9B/YoHsSMbVSu+/oHb+FmnXpMvvSDX13xuTDGzf0dV
K74m1dLUOaOevKfx8ZaJC1OqGa29q+IpvPRVI8zjSiWd7Qxvpe720qETDhXK
zwmLoicMXXqnrvNNJZ3vzAiViqc2icqv7TuQViVmqOK2VKn/Rkao5bwFC0kW
nP59h01f5pHJY67yjirs6sUve7x5tPGOHIH8nsMThy2/p0+/OcLCwzbWsYWN
5Sles4Zw/HIZPuvtongKL926JRu73Rk6ISk7y3l/UnyZ7GUkyhPMPzBPKCc6
2xSfdaazndlffMsmovaet9NPz/hMVd1Ktfpfv0kOj8niESw5b1St+IL7NsON
ffPIUCGqri0zGrc7v0l/ipdtqn/oNXX0gPcsAu5UM/3vahfFKyhlY/c7Q2dq
06yMTA++kv+zUhhlZmSVVtv5pqLOd2aESsXXCOuE1G9FQ4aL6aLESuZ/RVSq
v1ZKNOSeikgsKb3MhmxUrXhu0aEJf/twtc+ubQ4LJi3yvlXN8Bs71V55cUWi
09hRy4MvJwR7BF6vZDocuyieonze2O3O0BkJ9+rKsUuuVxNSojpl2Xjb32qI
zjeJO9+ZESoV31QU5xX/qolMmKzgie9/pvjVYZRK9cs3ibm3ooL8J5iwIBtV
K15cdm7ZcE5YAePXeCmqFV//wMFMfsmOqLgwZ0ZMMcPh2EXxFOXrjd3uDJ0T
V1zz27jz0OmYwM3BqW0vxNE3dbEzI1QpnmjMO+xiMfmTDwePXbH3EY8VvyIq
vfgUfl7YIo4n89moavHiqps7Flh4XWfJJ6UqFS8oiPPyD4s5Fubt6nnuNfP5
3tVfQ1FV1vntYwZxWv7xZ9vfWQCgEXEzzh48/uvNR8yPETBoIu6Tu8V8Vvzr
DwAAAACgB9qPhFcaJC/XbtRHwyOP2Z6PWq5XYdg8ABgs5U+mpG0HydNnUvCf
eM/dktGg2IZh8wBgsJRHNDUT5Hc2k0KQt8di0335DQybBwAD1lE2SkVlnc2k
EL4Im+9yt677YfN9AEAP6SR29EKH2SjtfCaF6FX0QsdbNd0Om1f1Rdbq/qwq
hm37s6oYtu3PqmJYuL9Ba3u9UVmbmRSNLy9nUPNBxSWxVnY3qoluhs2z6n8i
q4ph2/6sKoZt+7OqGBbub7hoI+HbaZ1JIam8vGT4RyPHGBsbjxkxaLDltSqi
62HzrPqfyKpi2LY/q4ph2/6sKoaF+xs2LY2E1+sXWa+Ll+p5/SieQfpev17A
iwwAQIdsBACgQzYCANAhGwEA6JCNAAB0GGYPAECHVAQAoEM2AgDQIRsBAOiQ
jQAAdMhGAAA6ZCMAAB2yEQCADtkIAECHbAQAoMO8GAAAOqQiAAAdshEAgA7Z
CABAh2wEAKBDNgIA0CEbAQDokI0AAHTIRgAAOmQjAAAd5sUAANAhFQEA6JCN
AAB0yEYAADpkIwAAHbIRAIAO2QgAQIdsBACgQzYCANAhGwEA6DAvBgCADqkI
AECHbAQAoEM2AgDQIRsBAOiQjQCgzyS8nCQ/k/7D3eIzy5oIqVRUdGSWiePv
vObtBDdxpql7dqPiZsMjj9mejxS3+Hm75phNX70zJu5U7KX8BkL5uMhGANBz
vPRVI8zjSiXULUJQUVInatnYLhul/Cfec7dkNCg2igVieSIKX0R+4XGfp3RQ
ZCMA6DleurVSNlIE+aGW8xYsJFlw+vcdNn2ZR6Yi+QR5eyw2tYlBElF5cc4k
n1xB6z3IRgDQcx1lo1RUlhwek8Uj2p83ys4Rw+a73K1rvYPgv0z42vgjq0sV
Sofo05aWnwIAgMZ1mI1k5DXknopILCm93C4bpaJX0Qsdb9WQ3wlfn9m0ePKo
gf0+XuR9vVKs/GjkIQDoubbXG5WJubeigvwnmMizsfHl5Yxqef6JS2Kt7G5U
E1JpU364tX9amZCgPRTZCAD6TFSVdX77mEGcDrNRKvssOmwRx1OWjZLKy0uG
fzRyjLGx8ZgRgwZbXqsiE5GoSrE3G2ZkZDTczC6Z2/Y9tY6eAQDA25HUPor/
KSQo6mJOfceB146I++RuMZ9+7qcKQlBZ3IBsBADtEdf8O/b7SX/58+DVkSkF
pTe2DPvTH/8+e+uJBzXi7h+rdBTuneAVk+Z5JJaJut9Z85CNAKB5gpwd/xww
Kb5MWHFx9eC/cQIetRlYTYga63nt1dfzaSeJTQWRnw8e755ep945YU8gGwFA
8wQ5Xv8cOOmXx2eWf/D32VEvm9psJKpS7KZPbI8z55uH9bQDCV9FfTZorPdT
vq4qb4ZsBOjljmfET45c2rOvTg8qy8Z+Q1Z89o8Plpx+3YP3xMI3yX5rLKbN
W+P6Y8jOTwcYuWY2qPEUewLZCNDLaS0b//bPzRuWbr5RRf84Rcwrev6svfwX
r5vfVDcV7P/0L/3nHMwXSImGpz/NG/CO8d4XQm29AB1DNgKA5lHvqc+VVt8/
4B5wvaLtmSNRc+e7FQvbW/yVz1NqhHbTs4DR//vel7drqUPl+Yx8d4iLrk8c
MSMGADRPkY3lEuHrXzeM/Hj+1uPX895uPA6p4aHrR38xDlWcKcpuvfPx1ic6
vuKIVAQAzWvJxp48WFxy7NMBI71y5Cs/ENykuQP/seRmtY4/qkY2AoDm8Z9u
HzGgp9kolXCTrEfNiH0tJr+tuLjEaNzWh7r+KAbZCACaJq55cHT96P/p2+Ns
lK1Y+zD6++0h+3dv32jrncTE6G9kIwBogajm2b1bJYLud2QrZCMAAB2yEQCA
DtkIAECHbAQAoEM2AgDQYV4MAAAdUhEAgA7ZCABAh2wEAKBDNgIA0CEbAQDo
kI0AAHTIRgAAOmQjAGiYBvpTiytvBKz9Yt0P/sEBHs4ex5816rwJK7IRADRP
vf7UkooLi4eMDciTL3HWmP3DODOvHF03YcW8GADQPPX6U/OfbB1l9OV9nvxG
0zP/0YOmJnF1/AyQigC9XMa945F7Jvfsq9ODqtefmuDd/2bilMiXQqmk+rbP
v/767rg9+U3dP0yjkI0AvZzWsrHn/alJorIrXg7uO7785J3/HrrmRIHuFxBH
NgKA5qnVn1pGUnffd2q/P/7XQE5gLiOdFZCNAKB5avWnlkqbXkVZDHh3lMPJ
vKIkz8W2EU8b8Dk1ABgAtfpTS8XFR80Gjgl5LrvGSFQlz/94bhJX1+GIbAQA
zVOvP7W07o79J9N+fiN7tKTs7IwRS25UIxsBQM9poj917YNId3f/0NCArY42
XokMNKhGNgKAFhhCf2qM/QYAaAepCABAh2wEAKBDNgIA0CEbAQDokI0AAHTI
RgDQWxJeTpKfSf/hbvGZZU2EVCoqOjLLxPF3XvN2gps409Q9WzZNm2h4GuXq
7Bd9MiZ0h3tUVr1s7/Ir/m6Bx8/EBGzySSpvN4QS2QgA+oyXvmqEeVypYpA5
IagoqWtNOaVsrEm1NHXOkC0Q2fh4y8SFKdUEN2n5uJWpNfJtq0xWJnHbDFRH
NgKAPuOlWytlI0WQH2o5b4FscR8LTv++w6Yv88jkCQsP21jHFjaWp3jNGsLx
yxXU3V46dMKhQlmQioqiJwxdeqdO+RjIRgDQZx1lo1RUlhwek8UjlM4bSfUP
vaaOHvCeRcCdarFsnjbn/UnxZbIHEuUJ5h+YJ5Qrz9nu05bOng8AgCZ0mI2y
y4u5pyISS0ovN2ejuCLRaeyo5cGXE4I9Aq9XiqW1aVZGpgdfyc8bC6PMjKzS
apUPgDwEAH3W9nqjMjH3VlSQ/wQTKhvrHziYya8uEhUX5syIKRZLuFdXjl1y
vZqQEtUpy8bb/lbTZqkfMhuf5z7T0ZMAANAkUVXW+e1jBnE6zEYSPy9sEceT
ek8tKIjz8g+LORbm7ep57rVQKjuVvOa3ceeh0zGBm4NTq9o1iCWzMdzBwmed
S11VtbafBgD0ChroTy07ypufZ41zzWzobj8R98ndYr7Gl3ckszFyw2TyK8xh
ns/6jY113RYCANAd9fpTU8SvY2eM3/K4UcoIMht9HZwi1n2uSEj7BYHfbWWm
FAAwGOr1p1YQF8f8y2zbU74uC29BfRbzprTCz94pwmmWLCFdpvjbrC0tLGak
HgDQsYzjyZGTv+7ZV6cHVa8/dTNR0aEpE33zGO8z+Kbkjb/tmsgNU8iEPGD/
fz/tDmGiIgDQKa1lo1r9qSnCVxGfcQKfN9GOoH30MTx7d/iFr5stO4F0nuZj
5yCoZ+aEFgD0mNr9qRWEBfvMzfcXCHVWeIsOxzfmZucF2q6grkCG2lr9ejxO
94UBgB5Tsz91q6bnQZOmRBUy0kursxkx/pu+jVg/g4xH8k8fpw2EROfNswFA
T6nVn1pY86yq5Uyx6dkuzvSYYpWG/2hC1/Niki8lh9pZUieQQTYr7t+8rbPC
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
    "], {{0, 0}, {436, 
    223}}, {0, 255},
    ColorFunction->RGBColor], RasterBox[CompressedData["
1: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
AAAAAEC//h+5PFVW
    "], {{0, 0}, {436, 223}}, {0, 255},
    ColorFunction->RGBColor]},
  ImageSize->{436, 223},
  PlotRange->{{0, 436}, {0, 223}}]], "Output",
 CellChangeTimes->{
  3.670604595892701*^9, 3.6706046754306517`*^9, {3.670604888211872*^9, 
   3.670604894469328*^9}, {3.670608397749814*^9, 3.6706084058362627`*^9}, {
   3.670608618885976*^9, 3.670608664925033*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
ijt1C6dzDXf2Ku6cIe7ChcALl4OuXAw2NiTcNCKaXg2/ZxL16Drpyc0E5wcp
7lZpnvZZvs5F4f5YKyYFkFOIWHuWS6rIwFWk4tprcgfayFgb6q4V/RRD8Uuf
o4g35sIMCuR1GpsNRxetp3WyO6IheXNtzRcVZuN//Mn02inT4tlXp1N4jJG+
npf19o/9MKhmD/j8499+phXYuyR8fDzo4Ls/+tizfyu38t8BAIAVWwgSScDG
1MnjtFpfc6fC6RcrR8Ec+d6ZIy87pm/XgU0Rsnuc/vyv/3W2ElvwvtRt9+GP
f2si4cIxjyCcpy6J8t3c5Vv8Cm/lcmlfy+PxuwamE3PbbP0KdUyjVXRwWEPX
in69ibb+5Rr6+G+NwtDbGVom3XmaaeVT4EYow8fWRGc0pRd3omtrW0abOsc7
+6cHRmcpk3Tq3OL8whJ3AwsUxT9lBn2ut6W2JoeUFWIb43CBYH4Yd00Vd01l
rYaufekjAdfUfEx2e5toipqr8X7Xq69pblf3o8s9ruxHzXOlef3QvI2EzWe1
afkaafld2ed/VVPUAq5qomsDVn4h3nAmauv0dp1ub7xt5VoZvvVa19pfuLjp
fyzSspqNU3zOWOq1D/9w6GFEYfeG1+Mwm278v3/72Gu1UhT+14/+8LBd4ve7
ZRVQMnzrta6dml0oqR3wi6oytkrZcz5YPLW0LhD078bdtEtH13qFVUakNmSV
dpEbhlB+oqtQQK3TpmeZg6O01p7J6qYRdHlKQTu6HBddHUCqdsKXPHDLOXUj
SkM/aJ9BiKru5nMVNTXdwAOXQl9tBy8R0LU3rtyyNNJxM9Z69d9OwDVVD+O9
9leOPjTUuX3p4pUL1y4a3D73/T2d8w9PnrNC1x4467L/rKumrreGrs/L73vW
T0XfV8XAU+WCh4qhi4qRk4qxg8p1W5UbNio3rdVMhZdrmFrvummjZmKrYmSr
ctle9dJKu2CvamCvet5e9ZyD6llHVV0nVR1n1dMuqqdc1U6479PxPXoOj67V
Nwm/eDvy+qO425bx5vbJj56mXzGL0TEi3nmc7B1YGhBSHh5TQ0qoz8zqxFpJ
WX9p2QBq6NqGxjHx1tMzQ6HQxRudzpqfX3q1oWtf/aBs/3JK+9rtJsrGzVzM
o4T/490PrVf2EBHuSbT/5788WUKT+FQ1ZCMKt5D4ZyigxP/Jo5jSM4uxDyhC
UdYzNMP/4dxYqX7KAsEyjc4aotBauiYq64dyyrrjs1sICXUoje38i9C1t+zT
UW5ftEhAfTt9k4SKTBR96mfxr41KLT237783e2Co52WyW7yi8DXRcDQ+bmF8
8c4N8ys3na/eDzWxSkKv/Mgjz8av0Dmo1DeSjHI7PKUBn0B2ihb+ODjr+3Sf
i6mKo5GKywUV9+9VvPRVfHVU/LXV8WdORZpcjrE0iXA0xrlfcPLQNvPYp+um
dtBNbY+3mlqAmoow0tH/Y223Bv7kicgrRkn3zbOfOhYH4Wvi41qys7rKywcb
G8d6e2YmJhgLC+wNfrm28qWW3rUyfGtFykZWx+M/vrvZbFzmU3P1PtKMEu49
x5/OOPn+pw+bpLDnvSJ9PSUE+5RRENU0j1i45Yiy5eDlULOnmSiLqhqHF5iK
t2ELCnBUplKG+svifUjWOi+NtvLDHLqfFc7PjK1/rA91cS69s9C+yO9M9I2X
5hz3huhfTnrgUOTvkUVyJCbcs07Q1Y3apRYoij6sqavivjseYWKcYmdbiNIv
Pa2jumq4v59Ko23rIp8d+xdbAfDm6ohX//x/f7LpbER/2RlNIfcfe/g4P75+
wSZXKqu/FefrKTl0BouU3nTm9updxN3ngx1wxe29kwp9FBiPy+mty0/zvoG7
vnrzkHBXKyfwfltp4tzUyBsvp9AnopvSjFMs1QK1RWG4O1gPfSSgOjK1oSQu
s9rTs9zIMElzF148CVE26uvFPLbMCw6qzc/r6eqaZrGU68llIBXcuZ7qcopc
by65o7KxtXsCDU41zwVhqah9i4RCks6Q62/QG9EmhsiJPkTzQ1gkBt/eXRhm
S+mu38hy9M7pvqDamHNxd0R5uC/k3MNc19jmjLrB9sKiHqenJWgULB6GGur4
y5cS3d3K0lI7OjqmIAmBspKXOX1pQgVhdlm3wf140ZzFPecsNHDmK3SliMa/
lN4s3D3RwDnO4VxLSfwS882Lq1ncpdSOfIP4u6JIPBJ2ybk0kDxU39YxHhHe
cN0kFWWgKA+PHCY+MM+OjGhoqKdAGIIdQrlTEaFM0m/YpWGpeMiQGECqHptS
+EczGNRxVBwGXheuZgk23VMc6TDR37qRC0fmxrwrifsJ32OReJh40Ycc1jLR
1d4x6e9XpX0qSpSHe3cH37mdQYpq7OmeUfCfIQBshhJnIyoLozOasNU4R6+G
Z5Z0cTgK/NQzhrUwV5Hgib+pgVIRf0MdpSJj9s17EQuWBeWDz0wz7FRxp7FU
NE6xzOsp6+qZ9PMlnz75PBLRCNrPh/ysdpTNVvivFQBboazZ2D8ya2SZhJWL
dv5F8wuKfVMR4Swt1mWFhtzZJxxBX1fNC35EmxjcyIV1lBbDpAdYJGoRzruV
B3dPDebn9aCBsygSjx0J9/SoaGkehxIRAIzyZSOHyyck1GnoC1fmHDeOIDcM
ybpHEjDQVBr+8Bh2XzHD99bUUMdGruqY6r2VYYul4iHiheimtL6hKVxA9dFv
w0Q3El2cS+vrKaIFnAAAjJJlY0ff1HnzOGzxtiOuWBGXKb5kcZ6aF2KJpWKS
qxGle0NHVwzSRh/mumIj6L0h+kG1MYWlXWZ3MkXLEU2MU/LyepTgJgMAUqI0
2bjE5vpGkrGF3CevR9Y0v3lRn/zrqs4KvXcQm3BpKY5b4zjFF7C4S96VRHX8
GZSKGngdzwpCel6TwffxWCQe0CJ4uJUP9MvjvrsAyBXlWMPTPTCtfYuElYsu
wWVMlsKfC8KYncj0N8PKxTSv6/QZykauqqO0nCaha06pBWrbFfrGZdTo68Vg
qXjieERcXMviosJ/ZQDYHoqeisiz1tF9BiEoGE/diKpv21CGyDNUHLaWJmJz
LgQzrbay5PWf8sMssJnOpYHYIPp8nFlwUuEZbRKWiqdPRiUntcHwGYC3oujZ
mF/Zi0272PgVspYUflkyk05N9by2OufiZ7qR9TlI5VDd8Ygr2CDaKjHozJnV
J1l0z0RnZnRyuYp/yioA206hszE2qxnb18s/qkoJFp8MNpcT7x9eeRR6fyc5
YyOXMNgLNoXe2Ez0OdJdQ7NwLBXPnY3Ny+uB2WcANk1BsxElIcpD7AHAuOwW
WXdnq7hsVmm0M1YuZvrdYc5Nb+Sqzum+U1EmKBU1g/QMPTx3qQtT8dtDxKTE
Nt4GNrwFAKxDEbORy+Pb+hUKN8o+F1RI7pN1d7aq91lesOlulIpBtzSaCqM3
cncRSe3I1wzSRcH4Hf723uM+2O6Ifj5kBkPhly0BJSeB86l5M8VO339n9MjR
3emB8YOInkUpjJAULhsXWZw7TzNRMO6/SFD4mReBoLkoFnssmnBXa3q4ayMX
LXHZ9kV+qw9EP7FQUxVuIfvQImd0lC7t/gIgGVs7n5o/nX7st584da887LbY
9ujTv1l3Sn53UMVaw0Ojsy49TMQeeOkdUuyj5FkLc6JddGLs9Jj0DX06o/Rx
bP+cXThddX0blIp6ujEN9Qr+MwLIMcpwfXVpwObami+6tfOpWe0PP3r/bC1j
5T/YPY5//oVaruTTQFFScXllRx3sWCs9s5jxaYasu7MlYz0NEQ+PY6t0empz
N3hV2UAttoWOhscFtcNuu9QCvT0rYNMwIFUN1RE4F5XNtTVfdGvnUwsYtXe+
UMUNcpb5tEq7Xf/+409deiV/K0lRsrF7cObI1XAUjFeeJCv0brR8Hrc6NQAb
Ryc6X9rIptzLK3sK4aqjsOWLqg9N1DR8dbRJTU3j0u4tAJNjrSgeN9fWfNGt
nU+NcCdzrC+bW539y4/+z+/ORw5IIxEUIhurm0a0LhBQMN53zVliK3CZRJsc
SnC6iFIRZSM5yYfH3dBTKktctkWui/AGY8BpVaMHqFz0gnIRKLQtnU8txJ+v
tVf76T//r59/6dolpVJJ/rOxuLofW93tHFSq0Av22itSgk33oGCMtDxB6arb
4FU0Ft0wyUIYjN66qqcczmiTGhvHpNpPAKRuS+dTLy+zh/AH3v3xR5dJ3SO5
FscuBHQwd948dW55j5peIApG15AyxV3dzVqYy8E/wKZd8gmPN3JsAWZkbuxk
pHAFo4qbvvq37nB3ESiJLZ1PvcwbJf7t5//t0Se8xyiYzT/0h/25VMmngzxn
Y1phBxaMPhFkxQ3GkY6acIuj2CqdjU+7IC0TXVrBK4cXOFw4/F1gTY0y7CwE
gNDWzqdenidf+ot63ITwav5kouYfTxbTpJKN8rmGJzG3FXseEB9bI+u+bBKf
x61M8MIORU31NGFQ32LqpLCPrI7TEc68WF41vpYwPbUgvX4CsK0kcT41vQ5n
bu7o5eX00NDAOlsqB1TLYSoiUWmN2HEG4SkNsu7LJk0NdWDTLvibGg15ERvZ
elEktDpRZWVKWs3sVkBAFTwACJQOnE+9GSEJz7CdGGMym2Xdl81gLy5UxHlg
q3RIVtrTw50bv5bL5z1K9Vk9KvqmJYyjAZAyPqMz1+Gzn/3+dlLjJFt8ZC5v
2RhAqsaCMTm/TdZ92Yy++kLs7iIqF2vSArmct/jJyOIu6YeuTEn7aZ+18IJx
NADbglGj+8evY8dfGp7JTzYKBMsexArh1jp6gVmlG3qyWK7Qp0YzfG9hk9Ep
7sazY/1vdfksk37E//rKWh0dm4AEGEcDsF0YNXrym418gcAJX4KCcddZfAG5
V9bdeTt8HqcuixB8W7iXTui9Ax2VaRvcS0ekZ2xkj9cl4cyLu350dqWU+gkA
eB35zUY+X2CD7Tmmjy97NiDr7rwdSlddjI0uVi4Whtkszr/1MVX4rAwVf+HM
yy7XC1VNPdLoJABgbWtmo7jt7xadwbrrnIWCcc/54KrG4e3vwKZNDXVk+N7G
UjHa+sxoZ+0mXoSUW6Liry2ckvY6OzA2JfFOAgDeRB7vN7b2TH53LRLbjLGu
VWE22pod688NssAWLobc2Vubjn+rORcRB2K8iu/KYakeBmPTcC4qANuPO9ua
9vi/f/Gl3GSjQLAck9m8a+U46UsPE8emNvoYnWzRZyiFYbbY+pyg25oVCZ6b
GEQjHA7P2NVfJUA4lL4UZM/jw8wLADLDpbZXjbJemiSQSTYymOwHbjnY6m73
0HKFOB50YW6qNNoZf3PXyvqcXaUk5wXaJofAdPrSqScO2CJGywScZPsJAJCI
7c/G7sGZM7eFW9RqXSAUVinAaS9zk8OVid7YNDSqGFHdiKrHTb/a8Ojsfqt7
WDDiihIl2E8AgARtczamFLRrngtCwWhwP35kfG473/pt8fm8/saSdJ9b2H1F
9P95wY9oE4Nbec1nzQMa9leFa3X8z6Q0FEuqqwAAidu2GepFFsfatwAbRzsH
lbLleByNhs/PMkOwMwtQQxVjUYT9Bg+6WkdqYZ2ay8qJBr7n6obaJdJVAICU
bE/d2D9C1b0Tg1Jxr0FIbrm8LuETCEY7a3ODLPA31LFUjLPXbymJZy9K4Nk9
v5gcFS89FIwHfI1GaZNbf0EAgFRJOxtbuiZQuaixMo7Wvxs3RKFJ9e02Z25q
pLkwJtpG53mhGG433ieZnS4EguX7AUQVP+EixtO4uwvsxTdfA4ASk8D51MJX
mYjb8+mNRqa0eimtbGQtcVMLOwzux2ODaDXdQAdcMUuujnoRCKaGOmrS8LH2
+lgkCs9CtdVrKYpbYkrsoGc2h3vexQmbeTEJc+Lx5fdOAgDbZ2vnU2N4Y1Ga
f73bIrVaQ+LZODRG8yRWaF0kYKl48HKobyR5dEJejpXn83mjXc/K49wjLU+I
IpFgppVPeDze2yTZ95qdWzjy9B52BtbTlHDJvjgA24NS31MdkLa5tuaLbu18
6lW80bBdf7PsYEnl05ZcNvJ4/JKa/pt26dhm3ahdtEhIL+6Uk2MBuWxWf2NJ
YZht6L0DokgMtzhSSnIebiNv8Ly/t9IxNLzHeWVK2lcnurxA4q8PwPZoiMjH
qdzaXFvzRbd2PvUPuCPBql/Yd8vnOYMzNGYBudc1pOzEyqN/wv0izgXZ+hW2
9ch+uoFJp/Y1FFUmeCW5GGJrtkXPPlcl+030t7zVXtxvJammRM1bOPOi7q1f
1qaQO/QCgJlsHWyIKNhcW/NFt3w+NYYzFPDNl6597FdeQRI2sYZnirqQW97j
hC/RNY3B8hBrJ29ERaQ00OjSKnHfCGUdday/vTylMMyG9OS0KAyFT7LcUE90
vlSfQ3zbbRXfFpfPs0rFYTcY9ztf7x+fkOrbAaCQtnw+9SrOgPfXX/sMSH7c
t/w2dWPXwDSqD7VvkcTzUOsC4a5zVlRaY2vP5DYfHs3jsGkTQ2hE3FaaiOrA
TH8zwl0t8TxE/4k+iPKQ0l2PxtTb0KUJxrQO8Q52g1HP4eniolS+ZQAovC2e
T/0cu8/tK1X8sEzO0uLy+PmVvVeeJIvy8MClUHOX7JjM5s7+aUnlIQq6JeY8
1hjUcfoMBbW5qZHp4U6soXzrJKfXZgQVEK1T3K+GPzwmHoOihspFVDSi0hEV
kNIbMr9W6UDN7kB97Cxpc9fobf5JAYAi2dL51Jy5nllR2cHuefqlRtioFBaA
rJONVBqTkFB39Gr4aol4keBJrOgZmuFveFNrzhITZVpjXmQO3iLB6SJqsXZn
UXyhRjQ/FHrvAMFM67URt5EWdFsTvVoW7l5FvGdLUdxgSzmTTpXQV+XtcHgc
z4pQbByt+sgYRyiXSTcAUBhbOp+aMxiibxFZ0d43INSZd+3T3THjkg/H12bj
6ATdyqdAQx+PpaLB/fiUgnbW0pvrVj6fNzPajcq24kjHOHv9wBtqGw26Wxoo
KrEWafkdlp8ka20sUVFLdruCCsLajOCu6qzx3qaFuam3PXdASij0iYsJ5tgB
WOqGjzIzOmTdIwDk25bPp+aOEr/+8T8935L7f/xUM3XTR12v6dVsbO2eOGRI
xGacrX0LWrrePJtAmxiqScOnuBsHm+55YQbk5q4kF0NU1/XWFWBD49mxfmy8
zGLQ0PBZIo/jycoSl42vjd4dJJyPVnE5v/e0exVZkfYtB0B2FO986qLqPmyf
nDtPM98444ySrb0iJdnNSDwPUdWXF2LZXBQ70d8ijXWDcqKwj/xd5NXVcbT5
9SMnQjo74EQDAJSH+BqeqLRGbOW2Y2DJOmeACgT80c7aAqI1tqUhNiNcSnIe
aCph0me2se+y0T87cj3tCZaKms6GasecdM9EUyjy8uAPAEAisFTk8wUuwWUo
FVE2hibWrfWH6dOjtRlBqDLEIjHwulq6z62e2tzNnZaicBjsBY+KEHW88ISX
Q4RL+43t1FQDDC8l0mgyW9IJAJASLBsDoquxI1CzSl+zS+HC3FRLUZxw7Izt
8npNhWSlXZcVypjdKQub+QJBWkfBIeIF4e6LeB3LFL/9h4LUVHB3bmfAIkYA
lBLKxs7+aTW9QNSqm0bEf2txntpWmpjqaYIdHbUydt5fFG431tMoJ3PE24DD
4+T1lBkk3MUG0feyHBNza3ZrCIPRxqqAw4EzsABQTigbz5vHoaLRK6ySy2ZN
DXV0kjPIST5osCxagRNyZ18B0XqwpVyJ51ZeNUQb9a4kHgw1wFLxbOztquGG
pMS2XWqBKBi9vSp3zM8HAHYilI179Dzv3TCNttUT1YerW7ya7sknPBloKuFx
pPMst1xa4rKzu0uMUyyxSBTuu5j6OLenjMPnhgTXolRUV8VFRjTIupsAACni
CwQoG/1M1EVzKyRr7dwgi9qMoP7Gku15Bll+9FOHPSsIokIR/cKrMnSQNrqM
zVU5l6Jg1FDHZ2Vu9eAYAICc6+4bFa3hGWwu32lhiNCXGJVDdfiaaMOkB6JC
8WrKI1Q6ogIS+zNsNu+hRQ4Kxn17gisrhmTbYQDANogLD0Op6HnvvKw7sq1G
6eNZXcXOpYH6caaquNOiSNxP+N6jIqR/9oUJqfn5JRPjFBSMhw+GtrbulHl5
AHY4nNMTlI2hPm6y7ohU8AWC2cW5gdmRxrH2kv7q6KY0ixyXI+GXRWEo3HsW
f+ZigjmKxPzeClGhKDI5yTh3NhYF46mTkQMDszL5LAAA0sGdTDH++NcffPgR
8uEfPtbLoz5fdoJ7+hhlYxTeb/u7tcBenGbOjsyNdU731VNaK4bqCvvI4i2l
PU+8xbVkRDQkr9PwtdGoFETpZ5xiqRdz6zDxonhNKN7Qb5lnO4U3JNVT2ljc
NVet9/dTTxyPQMF4Xj9uekqBn/sGAKyBO0NOTG4UHnAoWKQ0UZ+vw5FgNnL5
PCqThoq0pvGOsoHa9M5CUlNqQHXU05IAi1yX62lWqDzTJl0/Gm6oRTj32siS
RjsYaqAbc/NqyqP7OU4oOdFQenhubCOfTmPD2MH9BBSM101S0bB6618fAIBc
4k4VePtWzL60x9k62cjmcdCAdJQ+geq6OkoLirvs7pLE1mxiXYIPOcyh2O9B
jvO11Cfn4+6ciLyyN0T/bVNrX8g5lJMoLVFmXk97ci/L0TLPTbyhKBNvnhWh
AdWR67SQZ3Goe4V9laga7KcOo6De9IGnxUV92OruhxY5bDacmgqAREnifGre
TInTOZ0bj11crG44ZI9taeG1gF5tcyWo54WZaPvHN1A23npshAJKP9b0NOna
IeKFzdV1aoHa34Zd0o25hYo08+yn9kV+KELD6hOT23KL+sgoXVHGohE0Gkcv
sKV32rYEJMS3YKu7XZ1LYe9uAKRii+dTs/s8v/6NSuCAcIaA2XTv06/dejex
BlvAmedgb8tsMPn8aPaMWB+eWFx550WirNMI0j1MvIjScqWuszLPdrIp9HYp
wwfWkNBgOb2joKS/up7S2j0zMM6YWmBL7fzsbSQQLOMCqlEqohZKWHPDDQB2
lIZ6Cvp3sbm25otu7XzqxVazD36uljCBZSW97OAv37/e9PYlF2ck1jppiL0s
YLa6f/Grb2LHxZ4AHqJRUB52TPWiog6NQyn0CRqLLud1nZRwuXw720KUiqho
TE1pl3V3AJAXkRENWMGwibbmi27pfGruSMjnP33PuHE1qObJJ/7zp6o5mzgQ
RbDYTTA5oPKX937zyRnPZsZLo8Qtnk+tHBYXOXduZ6Bv5d7dweVlA7LuDgBy
pK11EsXj5tqaL7ql86mFA/Kf/NGyA7tByB0N/fzHPz9WIfEdVCEbZ6mLly4m
oGA8dCC0uWlc1t0BYAfY0vnUwrrxR/++L5aCLuPPV1t+9KNf6eW/JmK3aIdn
I4VC19EmoWDU04keGqLJujsA7AxbO5+a2XDtt//y408NDPWPffPh7/564mkp
dXvPYFV6Pd0zx46Eo2CEvbsB2FZbOp96eXmx7dGHP/n9vWapzgHv2Gysr6cc
0CLA3t0AyMCWzqdeFi5JrDT9yy++ceuUYkkjfpbWzlFU2Ad7dwMgG1s+n3oF
ZzzttuY/vsc1zEvpH/BOS8VlsdXdsHc3ADIimfOpubN1JCd7z+D4Eikcdb2j
shElYRC+Btu7O5rUJOvuAADk187JRj5f4ORYgoJRcxc+J7tb1t0BAMi1HZKN
S0vcB+bZ2N7dVeRhWXcHACDvdkI20ulLxlexvbuJ7W2Tsu4OAEABKP08tfje
3bC6GwCwQUqcisjAwOzJE5EoGA3Ox83M7MQ9NAAAm6PE2djSPH74YKhw7+5r
qQzGDjpiGwCwdcqajeXlg3t3B8Pe3QCAzVHKbExP78BWd7u7lcHe3QCATVC+
bAwj1qmrwt7dAIAtUaZsRCUiKhRh724AwNYpzRoeDodn+SgP9u4GAEiEEqQi
srDAvnk9DfbuBgBIihJkI5XKNLqchILxxPGI/v5NnKgDAAAvU/Rs7OujnvpO
uLpb+1TU+Pi8rLsDAFASCp2NVeTh/ftCUDBeNUqenVWGM7IBAHJCcbMxMaEV
W8Ro9SQfVncDACRLEbORzxd4eVZgW9QGB9XC3t0AAIlTuDU8i4uc+ys7Me7W
CMrNgS1qAQBSoUCpiExNLVwwiF/ZiTG0sWFM1t0BACgtBcrGrs7pE8eEx0nr
nokeGZmTdXcAAIqON5FyTmPfOauwlPSkpIa5F04sVJRsLC0Z2LcnGNtwjE6X
/JliAICdjD+VoW2QOiU2qSv/2SgQLEeTmrApaQf7IjhOGgAgcew+/2/+atHG
ev4ROc/G2dlFszuZ2JR0GBH21QEASBh/vjHc4uxXv/wvTcdW8bMB5Dkba2pG
jh0R3mA8+m0YHA4IAJAS3lx9qJlrCfWFZdLvvEhWfXsJl8v38yVj2zCa3sqg
UuGoFwCAxAkWerMaZlEkLnU//dsX7n3iR6fITx6KjIzMXb6UiFJRcxeeFNUI
S7sBANKy2BdtdeXskX989JlOQA9L/HfkLRuzs7qwR6R1tEmdHVOy7g4AYIeS
n2xcWGDbWhegVETNzraQyeTIukcAgJ1LTrKxvX3yjDYJpeIBLQI8CQgAkDmZ
Z+PEOMPBvkhzFx4Fo+GlRMooXbb9AQCAZZlmI5XK9PSo2K2Bx06/8ver4nJh
XTcAQC7IZPXO/PwSLqAaewZQXRVn+ShvcJC2nR0AAID1bXMqLi5ywoj1B/cT
sDkXszuZXZ3T29kBAADYiG3LRg6HFxfXcvTbMCwVTYxTmuBAQACAvNqGbFxY
YKektGMnXqF26UICmTwk7TcFAICtkF42okjMze15YJ69WyMIS8WzujFFhX3w
nAsAQP5JPBuZTE5+Xo/Fg5w9mquRqKGOv2OakZ3VxePBNDQAQDFIKhtZLG5B
fu8ji9y9u4OxSNylFnjdJDU5qY1GY735egAAkCdbXMMzN8fKyupCkYgtyMGa
0eWkmOimqakFyXYVAAC2zeZScXh4LprUZGKcgm3HjbXz+nFhxHp4sAUAoAQ2
no18vqC5aTzAv0pPN0aUhxrq+Fs30+PiWsbG5qXaTwAA2E4bycaFBXZcbLPu
mWhRJB7QIlg9zs/P62Ew2G+8HAAAFM762TgwMOvmWqa1NwSLxO+OR3h5Vjyr
HYUDrQAAym2tbCwvG0CDZexUAuzk0+KiPliEAwDYIV6dp56cZGBH+6G2b0+w
s1NJby9Vhj0EAIDtJ56KAsFyWmrHAS3hRhAnjkdEk5rm55dk2DcAAJAVUTaO
j8/fvpWOlYsOdkWQigCAnQzLxro6CnaCFSoXyZWwEQQAYKdD2TjQP4uNo21t
CqFcBACA5ZVs1Fk5xMrWugB2yAEAAAzKRuET0IZJbDZP1n0BAAC5QKOxZHJe
DAAAyLOy0gGUijevp8m6IwAAIEcIIc9QNoYE18q6IwAAIEdwAdUoG5OT2mTd
EQAAkBEBNXv35+Zti+Ifg2wEAOx0kI0AACCy1Ot1/ODhI8iBL3/2kw80Tj9o
ZIh+E7IRALBTcSfz/cNaGYK160ZxsuolAABsNwGzKzogmzKe9Uo29vVRUR4O
DdFk1TUAAJAlHrUc7+b4989eysZlKZxPDQAAioTV7Xf0SwvIRgAA2ADIRgAA
AAAAAAAAAAAAAAAAgHX8fw2TMeo=
   "], {{0, 0}, {436, 222}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{436, 222},
  PlotRange->{{0, 436}, {0, 222}}]], "Output",
 CellChangeTimes->{
  3.670604595892701*^9, 3.6706046754306517`*^9, {3.670604888211872*^9, 
   3.670604894469328*^9}, {3.670608397749814*^9, 3.6706084058362627`*^9}, {
   3.670608618885976*^9, 3.6706086650598907`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1.0", "/", 
          RowBox[{"\[Mu]Vector", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"freeE2", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Dimensions", "[", "\[Mu]Vector", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "kVector", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<k=6\>\"", ",", "\"\<k=7\>\"", ",", "\"\<k=8\>\"", ",", 
      "\"\<k=9\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670604929128788*^9, 3.670604930845661*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, 
    PlotRange -> {{-1, 1}, {-1, 1}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.04, 0.04}, {0.04, 0.04}}],
   TemplateBox[{"\"k=6\"", "\"k=7\"", "\"k=8\"", "\"k=9\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                   "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}],
                    "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.6`", ",", "0.5470136627990908`", ",", "0.24`"}],
                    "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.24`", ",", "0.6`", ",", "0.33692049419863584`"}], 
                   "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.24`", ",", "0.3531726744018182`", ",", "0.6`"}],
                    "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.6`", ",", "0.24`", ",", "0.5632658430022722`"}],
                    "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.6`", ",", "0.42664098839727194`", ",", "0.24`"}], 
                   "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.2634521802031821`", ",", "0.6`", ",", "0.24`"}],
                    "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.24`", ",", "0.47354534880363613`", ",", "0.6`"}], 
                   "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.5163614825959097`", ",", "0.24`", ",", "0.6`"}],
                    "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.6`", ",", "0.3062683139954558`", ",", "0.24`"}],
                    "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.670604748801675*^9, 3.670604931248639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"freeE", " ", "-", " ", "freeE2"}]], "Input",
 CellChangeTimes->{{3.670604772604817*^9, 3.670604797194475*^9}, {
   3.6706049354522657`*^9, 3.670604936703643*^9}, 3.6706051825214252`*^9, {
   3.670610360809442*^9, 3.670610381817631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0000609293903837127`", ",", "0.00006091881379699515`", ",", 
     "0.000059861154932949745`", ",", "0.0000588015308240486`", ",", 
     "0.00005768715282394865`", ",", "0.00005637139374448097`", ",", 
     "0.00005489129272384652`", ",", "0.000053526606531351106`", ",", 
     "0.000052317139168645`", ",", "0.00005077929622165911`", ",", 
     "0.00004829627892855015`", ",", "0.000044746078025292846`", ",", 
     "0.000040554860401220694`", ",", "0.000036222780771755225`", ",", 
     "0.00003201044021783339`", ",", "0.000027969669608163272`", ",", 
     "0.000024088333770100334`", ",", "0.000020387255444953567`", ",", 
     "0.000016939383260972107`", ",", "0.000013836613242501627`", ",", 
     "0.000011145824993841202`", ",", "8.886626613691107`*^-6", ",", 
     "7.036149261008262`*^-6", ",", "5.54659195928231`*^-6", ",", 
     "4.361539830188832`*^-6", ",", "3.426030380282441`*^-6", ",", 
     "2.69121572138431`*^-6", ",", "2.115808686475873`*^-6", ",", 
     "1.6659496111515182`*^-6", ",", "1.3144084514138399`*^-6", ",", 
     "1.039577724348817`*^-6", ",", "8.244709031046682`*^-7", ",", 
     "6.558202674256108`*^-7", ",", "5.233073290256129`*^-7", ",", 
     "4.189284243949487`*^-7", ",", "3.364836778096958`*^-7", ",", 
     "2.711719147008296`*^-7", ",", "2.1927320448256182`*^-7", ",", 
     "1.7790203088452472`*^-7", ",", "1.4481641530394995`*^-7", ",", 
     "1.1827083001847427`*^-7", ",", "9.69030757858036`*^-8", ",", 
     "7.964735893040142`*^-8", ",", "6.56675096522008`*^-8", ",", 
     "5.430562222130675`*^-8", ",", "4.5042523488803`*^-8", ",", 
     "3.746727905706848`*^-8", ",", "3.1253642340800525`*^-8", ",", 
     "2.614180383275766`*^-8", ",", "2.1924234427928013`*^-8", ",", 
     "1.8434659576627155`*^-8", ",", "1.553945860877093`*^-8", ",", 
     "1.3130931009186497`*^-8", ",", "1.1122013532371966`*^-8", ",", 
     "9.442122195224556`*^-9", ",", "8.033870901869022`*^-9", ",", 
     "6.8504739658692415`*^-9", ",", "5.853680207223988`*^-9", ",", 
     "5.012137371807057`*^-9", ",", "4.300077627306109`*^-9", ",", 
     "3.6962655158845337`*^-9", ",", "3.1831621782885122`*^-9", ",", 
     "2.7462405682854296`*^-9", ",", "2.3734463283631158`*^-9", ",", 
     "2.0547457069142183`*^-9", ",", "1.7817738395820015`*^-9", ",", 
     "1.547536321311327`*^-9", ",", "1.3461765036026918`*^-9", ",", 
     "1.172778318903056`*^-9", ",", "1.0232019675981974`*^-9", ",", 
     "8.939640139260518`*^-10", ",", "7.821183700684742`*^-10", ",", 
     "6.851736955582055`*^-10", ",", "6.010143493995201`*^-10", ",", 
     "5.278488757198829`*^-10", ",", "4.6414605492373084`*^-10", ",", 
     "4.086073701614623`*^-10", ",", "3.601181575163537`*^-10", ",", 
     "3.177289542577455`*^-10", ",", "2.8062441259635307`*^-10", ",", 
     "2.481028715806133`*^-10", ",", "2.1956481077722856`*^-10", ",", 
     "1.9449419852435312`*^-10", ",", "1.7244072836319901`*^-10", ",", 
     "1.5302248357329518`*^-10", ",", "1.3590462089041466`*^-10", ",", 
     "1.2079848232815493`*^-10", ",", "1.0745448975058025`*^-10", ",", 
     "9.565503944486409`*^-11", ",", "8.520917305077091`*^-11", ",", 
     "7.595701845275471`*^-11", ",", "6.775113803314525`*^-11", ",", 
     "6.046985134844363`*^-11", ",", "5.4000359739347914`*^-11", ",", 
     "4.82494044717896`*^-11", ",", "4.313172041747748`*^-11", ",", 
     "3.857358876757644`*^-11", ",", "3.4513725211127166`*^-11", ",", 
     "3.0892621794009756`*^-11", ",", "2.76614287031407`*^-11", ",", 
     "2.4773960660695593`*^-11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5.2882932921605175`*^-8"}], ",", 
     RowBox[{"-", "5.8171226280379074`*^-8"}], ",", 
     RowBox[{"-", "5.870006460906296`*^-7"}], ",", 
     RowBox[{"-", "1.116689360536327`*^-6"}], ",", 
     RowBox[{"-", "1.6700158449456382`*^-6"}], ",", 
     RowBox[{"-", "2.303493888300423`*^-6"}], ",", 
     RowBox[{"-", "2.969782828765588`*^-6"}], ",", 
     RowBox[{"-", "3.5269044391661453`*^-6"}], ",", 
     RowBox[{"-", "3.995876790785502`*^-6"}], ",", 
     RowBox[{"-", "4.6161367184271995`*^-6"}], ",", 
     RowBox[{"-", "5.5991659184684295`*^-6"}], ",", 
     RowBox[{"-", "6.859025994288004`*^-6"}], ",", 
     RowBox[{"-", "8.052879517883582`*^-6"}], ",", 
     RowBox[{"-", "8.868961098418282`*^-6"}], ",", 
     RowBox[{"-", "9.18484222922622`*^-6"}], ",", 
     RowBox[{"-", "9.017827790502864`*^-6"}], ",", 
     RowBox[{"-", "8.438977949332127`*^-6"}], ",", 
     RowBox[{"-", "7.541051911363894`*^-6"}], ",", 
     RowBox[{"-", "6.439112052003537`*^-6"}], ",", 
     RowBox[{"-", "5.264101531565757`*^-6"}], ",", 
     RowBox[{"-", "4.138070825554507`*^-6"}], ",", 
     RowBox[{"-", "3.1473237618317995`*^-6"}], ",", 
     RowBox[{"-", "2.331987898562815`*^-6"}], ",", 
     RowBox[{"-", "1.6938822215983862`*^-6"}], ",", 
     RowBox[{"-", "1.2122918380264025`*^-6"}], ",", 
     RowBox[{"-", "8.579814365639038`*^-7"}], ",", 
     RowBox[{"-", "6.018677067842759`*^-7"}], ",", 
     RowBox[{"-", "4.1897153701953016`*^-7"}], ",", 
     RowBox[{"-", "2.8946666308371505`*^-7"}], ",", 
     RowBox[{"-", "1.9833274311764626`*^-7"}], ",", 
     RowBox[{"-", "1.34512765814776`*^-7"}], ",", 
     RowBox[{"-", "9.001350864679125`*^-8"}], ",", 
     RowBox[{"-", "5.912285105935666`*^-8"}], ",", 
     RowBox[{"-", "3.778854429370426`*^-8"}], ",", 
     RowBox[{"-", "2.3149029804159227`*^-8"}], ",", 
     RowBox[{"-", "1.318927056459529`*^-8"}], ",", 
     RowBox[{"-", "6.49277875908183`*^-9"}], ",", 
     RowBox[{"-", "2.0649095766600567`*^-9"}], ",", "7.921916456155031`*^-10",
      ",", "2.567733137226469`*^-9", ",", "3.6042773210454015`*^-9", ",", 
     "4.141304188465256`*^-9", ",", "4.345820148188295`*^-9", ",", 
     "4.333882142049106`*^-9", ",", "4.185728652572607`*^-9", ",", 
     "3.956437844010452`*^-9", ",", "3.6834411076824836`*^-9", ",", 
     "3.3918130526444656`*^-9", ",", "3.0980111809242317`*^-9", ",", 
     "2.812507560179256`*^-9", ",", "2.5416464488614565`*^-9", ",", 
     "2.2889543593862527`*^-9", ",", "2.0560566582616957`*^-9", ",", 
     "1.84332504815643`*^-9", ",", "1.650320324841914`*^-9", ",", 
     "1.4761090127990428`*^-9", ",", "1.3194734194144075`*^-9", ",", 
     "1.1790595166871753`*^-9", ",", "1.0534657590710594`*^-9", ",", 
     "9.413190227292034`*^-10", ",", "8.412994745299329`*^-10", ",", 
     "7.521698819346057`*^-10", ",", "6.72788935673907`*^-10", ",", 
     "6.021094733910104`*^-10", ",", "5.391838087120959`*^-10", ",", 
     "4.831584021758317`*^-10", ",", "4.332640912707575`*^-10", ",", 
     "3.888152022568647`*^-10", ",", "3.4920244473823914`*^-10", ",", 
     "3.1387958898676516`*^-10", ",", "2.823652422989653`*^-10", ",", 
     "2.5422952631970475`*^-10", ",", "2.290949652206109`*^-10", ",", 
     "2.0662405120219773`*^-10", ",", "1.865201326722854`*^-10", ",", 
     "1.6852030881864266`*^-10", ",", "1.5239010053846869`*^-10", ",", 
     "1.3792611497365215`*^-10", ",", "1.2494272283447572`*^-10", ",", 
     "1.1328094018381307`*^-10", ",", "1.027968821176728`*^-10", ",", 
     "9.336265094361806`*^-11", ",", "8.486633618076667`*^-11", ",", 
     "7.720935002453189`*^-11", ",", "7.030198645452401`*^-11", ",", 
     "6.406519759138973`*^-11", ",", "5.843059369681214`*^-11", ",", 
     "5.333422592457282`*^-11", ",", "4.872191539107007`*^-11", ",", 
     "4.454392410480068`*^-11", ",", "4.0755843144779647`*^-11", ",", 
     "3.731859266054016`*^-11", ",", "3.419753369371392`*^-11", ",", 
     "3.136246817803112`*^-11", ",", "2.8780533511962858`*^-11", ",", 
     "2.6434854305534827`*^-11", ",", "2.4295232492477226`*^-11", ",", 
     "2.234568086123545`*^-11", ",", "2.05657713081564`*^-11", ",", 
     "1.894129297852487`*^-11", ",", "1.745803501762566`*^-11"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.644146657182489`*^-8"}], ",", 
     RowBox[{"-", "2.908561325121184`*^-8"}], ",", 
     RowBox[{"-", "2.935002278992016`*^-7"}], ",", 
     RowBox[{"-", "5.574236536798338`*^-7"}], ",", 
     RowBox[{"-", "8.077353645941088`*^-7"}], ",", 
     RowBox[{"-", "1.009523489026165`*^-6"}], ",", 
     RowBox[{"-", "1.1772996721948203`*^-6"}], ",", 
     RowBox[{"-", "1.374059055425647`*^-6"}], ",", 
     RowBox[{"-", "1.5833886835014965`*^-6"}], ",", 
     RowBox[{"-", "1.6809021505803656`*^-6"}], ",", 
     RowBox[{"-", "1.5536152702111394`*^-6"}], ",", 
     RowBox[{"-", "1.2274884400031993`*^-6"}], ",", 
     RowBox[{"-", "8.493580287982638`*^-7"}], ",", 
     RowBox[{"-", "5.597234216114799`*^-7"}], ",", 
     RowBox[{"-", "4.1994714683468715`*^-7"}], ",", 
     RowBox[{"-", "4.247536291579479`*^-7"}], ",", 
     RowBox[{"-", "5.346732807609555`*^-7"}], ",", 
     RowBox[{"-", "6.944406683029314`*^-7"}], ",", 
     RowBox[{"-", "8.446079018398223`*^-7"}], ",", 
     RowBox[{"-", "9.37841692083552`*^-7"}], ",", 
     RowBox[{"-", "9.541986343286624`*^-7"}], ",", 
     RowBox[{"-", "9.021748952342534`*^-7"}], ",", 
     RowBox[{"-", "8.058278795353147`*^-7"}], ",", 
     RowBox[{"-", "6.902918381346268`*^-7"}], ",", 
     RowBox[{"-", "5.74054449309358`*^-7"}], ",", 
     RowBox[{"-", "4.6774095840973473`*^-7"}], ",", 
     RowBox[{"-", "3.7593283064296656`*^-7"}], ",", 
     RowBox[{"-", "2.994772736464313`*^-7"}], ",", 
     RowBox[{"-", "2.3728094067365646`*^-7"}], ",", 
     RowBox[{"-", "1.8744622387600884`*^-7"}], ",", 
     RowBox[{"-", "1.4790150038024308`*^-7"}], ",", 
     RowBox[{"-", "1.1670872757107986`*^-7"}], ",", 
     RowBox[{"-", "9.21868066328102`*^-8"}], ",", 
     RowBox[{"-", "7.2938777240239`*^-8"}], ",", 
     RowBox[{"-", "5.783381240576091`*^-8"}], ",", 
     RowBox[{"-", "4.59715523426496`*^-8"}], ",", 
     RowBox[{"-", "3.6642665790509454`*^-8"}], ",", 
     RowBox[{"-", "2.9292011927140038`*^-8"}], ",", 
     RowBox[{"-", "2.3486832478880615`*^-8"}], ",", 
     RowBox[{"-", "1.889047140934963`*^-8"}], ",", 
     RowBox[{"-", "1.524122383855797`*^-8"}], ",", 
     RowBox[{"-", "1.2335594767876046`*^-8"}], ",", 
     RowBox[{"-", "1.0015199780610828`*^-8"}], ",", 
     RowBox[{"-", "8.156578523710323`*^-9"}], ",", 
     RowBox[{"-", "6.663307683396624`*^-9"}], ",", 
     RowBox[{"-", "5.459916962990974`*^-9"}], ",", 
     RowBox[{"-", "4.487191063162754`*^-9"}], ",", 
     RowBox[{"-", "3.6985494666907925`*^-9"}], ",", 
     RowBox[{"-", "3.057252229154983`*^-9"}], ",", 
     RowBox[{"-", "2.534237708573528`*^-9"}], ",", 
     RowBox[{"-", "2.106456786776789`*^-9"}], ",", 
     RowBox[{"-", "1.7555756848253168`*^-9"}], ",", 
     RowBox[{"-", "1.4669674364142793`*^-9"}], ",", 
     RowBox[{"-", "1.228931623131757`*^-9"}], ",", 
     RowBox[{"-", "1.0320819754383592`*^-9"}], ",", 
     RowBox[{"-", "8.68864979963746`*^-10"}], ",", 
     RowBox[{"-", "7.33189509105614`*^-10"}], ",", 
     RowBox[{"-", "6.201252844562077`*^-10"}], ",", 
     RowBox[{"-", "5.256728385916176`*^-10"}], ",", 
     RowBox[{"-", "4.4658143849574117`*^-10"}], ",", 
     RowBox[{"-", "3.801963188720947`*^-10"}], ",", 
     RowBox[{"-", "3.2435298891186903`*^-10"}], ",", 
     RowBox[{"-", "2.772706508835654`*^-10"}], ",", 
     RowBox[{"-", "2.374882512867771`*^-10"}], ",", 
     RowBox[{"-", "2.0380408471964984`*^-10"}], ",", 
     RowBox[{"-", "1.752233913521195`*^-10"}], ",", 
     RowBox[{"-", "1.5092638250280288`*^-10"}], ",", 
     RowBox[{"-", "1.3022738443169146`*^-10"}], ",", 
     RowBox[{"-", "1.1256151566385597`*^-10"}], ",", 
     RowBox[{"-", "9.745626528001594`*^-11"}], ",", 
     RowBox[{"-", "8.451639388340482`*^-11"}], ",", 
     RowBox[{"-", "7.341061092347445`*^-11"}], ",", 
     RowBox[{"-", "6.38653574469572`*^-11"}], ",", 
     RowBox[{"-", "5.5644377994212846`*^-11"}], ",", 
     RowBox[{"-", "4.8553161491327046`*^-11"}], ",", 
     RowBox[{"-", "4.242739493065528`*^-11"}], ",", 
     RowBox[{"-", "3.7125857943465235`*^-11"}], ",", 
     RowBox[{"-", "3.253131097835649`*^-11"}], ",", 
     RowBox[{"-", "2.8545166230742325`*^-11"}], ",", 
     RowBox[{"-", "2.5077717680233036`*^-11"}], ",", 
     RowBox[{"-", "2.205968741009201`*^-11"}], ",", 
     RowBox[{"-", "1.943067928777964`*^-11"}], ",", 
     RowBox[{"-", "1.7133849894435116`*^-11"}], ",", 
     RowBox[{"-", "1.5128343022752233`*^-11"}], ",", 
     RowBox[{"-", "1.3371526108585385`*^-11"}], ",", 
     RowBox[{"-", "1.1832312907245068`*^-11"}], ",", 
     RowBox[{"-", "1.0480505352461478`*^-11"}], ",", 
     RowBox[{"-", "9.29478716216181`*^-12"}], ",", 
     RowBox[{"-", "8.250289340594463`*^-12"}], ",", 
     RowBox[{"-", "7.331912854624534`*^-12"}], ",", 
     RowBox[{"-", "6.5210059574383195`*^-12"}], ",", 
     RowBox[{"-", "5.8051341511600185`*^-12"}], ",", 
     RowBox[{"-", "5.1736392947532295`*^-12"}], ",", 
     RowBox[{"-", "4.614975068761851`*^-12"}], ",", 
     RowBox[{"-", "4.121147867408581`*^-12"}], ",", 
     RowBox[{"-", "3.682387728076719`*^-12"}], ",", 
     RowBox[{"-", "3.2942537586677645`*^-12"}], ",", 
     RowBox[{"-", "2.9478641749847156`*^-12"}], ",", 
     RowBox[{"-", "2.639666263348772`*^-12"}], ",", 
     RowBox[{"-", "2.3669954885008337`*^-12"}], ",", 
     RowBox[{"-", "2.1227464230832993`*^-12"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.814697265625`*^-6", ",", "3.8146972654029554`*^-6", ",", 
     "3.8146972625163755`*^-6", ",", "3.814666583723536`*^-6", ",", 
     "3.8137963793705154`*^-6", ",", "3.8098269348196823`*^-6", ",", 
     "3.8000956215089587`*^-6", ",", "3.7784500075410676`*^-6", ",", 
     "3.742543932094833`*^-6", ",", "3.7011231222017216`*^-6", ",", 
     "3.6722100085206932`*^-6", ",", "3.6670860659171467`*^-6", ",", 
     "3.663245257801151`*^-6", ",", "3.613797455059853`*^-6", ",", 
     "3.4826353525474474`*^-6", ",", "3.2571850632212573`*^-6", ",", 
     "2.9426258734144284`*^-6", ",", "2.5577738289594976`*^-6", ",", 
     "2.134120132391004`*^-6", ",", "1.7105568315134434`*^-6", ",", 
     "1.3225575028474879`*^-6", ",", "9.92750886608107`*^-7", ",", 
     "7.28624276691292`*^-7", ",", "5.263161306778841`*^-7", ",", 
     "3.7618049919529994`*^-7", ",", "2.671263299447446`*^-7", ",", 
     "1.890066827492376`*^-7", ",", "1.3352243266595565`*^-7", ",", 
     "9.430359160234048`*^-8", ",", "6.664378959797546`*^-8", ",", 
     "4.714601820055009`*^-8", ",", "3.339295373550044`*^-8", ",", 
     "2.367874563091732`*^-8", ",", "1.6805038693945562`*^-8", ",", 
     "1.1931625021333048`*^-8", ",", "8.469520196285885`*^-9", ",", 
     "6.005440145173679`*^-9", ",", "4.248871920964348`*^-9", ",", 
     "2.995131254124317`*^-9", ",", "2.0996289151753444`*^-9", ",", 
     "1.4599383924007725`*^-9", ",", "1.0032961128558782`*^-9", ",", 
     "6.778635430748636`*^-10", ",", "4.466094161159617`*^-10", ",", 
     "2.8301139209929715`*^-10", ",", "1.680309225093879`*^-10", ",", 
     "8.797007566840875`*^-11", ",", "3.296118933349135`*^-11", ",", 
     RowBox[{"-", "4.118483332149481`*^-12"}], ",", 
     RowBox[{"-", "2.8412827646207006`*^-11"}], ",", 
     RowBox[{"-", "4.36375380274967`*^-11"}], ",", 
     RowBox[{"-", "5.247846601719175`*^-11"}], ",", 
     RowBox[{"-", "5.687228465944827`*^-11"}], ",", 
     RowBox[{"-", "5.821565451924471`*^-11"}], ",", 
     RowBox[{"-", "5.750955267558311`*^-11"}], ",", 
     RowBox[{"-", "5.546985093474177`*^-11"}], ",", 
     RowBox[{"-", "5.260769597725812`*^-11"}], ",", 
     RowBox[{"-", "4.928057961706145`*^-11"}], ",", 
     RowBox[{"-", "4.573763590087765`*^-11"}], ",", 
     RowBox[{"-", "4.2151171442128543`*^-11"}], ",", 
     RowBox[{"-", "3.863398490011605`*^-11"}], ",", 
     RowBox[{"-", "3.525979508367527`*^-11"}], ",", 
     RowBox[{"-", "3.207478727063062`*^-11"}], ",", 
     RowBox[{"-", "2.9101165921474603`*^-11"}], ",", 
     RowBox[{"-", "2.6350477355663315`*^-11"}], ",", 
     RowBox[{"-", "2.382272157319676`*^-11"}], ",", 
     RowBox[{"-", "2.1511681325137033`*^-11"}], ",", 
     RowBox[{"-", "1.9409363005706837`*^-11"}], ",", 
     RowBox[{"-", "1.7500667581771268`*^-11"}], ",", 
     RowBox[{"-", "1.5774048733874224`*^-11"}], ",", 
     RowBox[{"-", "1.4215295607300504`*^-11"}], ",", 
     RowBox[{"-", "1.2808420990495506`*^-11"}], ",", 
     RowBox[{"-", "1.1541878564003127`*^-11"}], ",", 
     RowBox[{"-", "1.0401457473108167`*^-11"}], ",", 
     RowBox[{"-", "9.377387755193922`*^-12"}], ",", 
     RowBox[{"-", "8.455458555545192`*^-12"}], ",", 
     RowBox[{"-", "7.627676268384675`*^-12"}], ",", 
     RowBox[{"-", "6.884270931095671`*^-12"}], ",", 
     RowBox[{"-", "6.215472581061476`*^-12"}], ",", 
     RowBox[{"-", "5.615063969344192`*^-12"}], ",", 
     RowBox[{"-", "5.075939668586216`*^-12"}], ",", 
     RowBox[{"-", "4.590106073010247`*^-12"}], ",", 
     RowBox[{"-", "4.154010468937486`*^-12"}], ",", 
     RowBox[{"-", "3.7623237858497305`*^-12"}], ",", 
     RowBox[{"-", "3.4088287748090806`*^-12"}], ",", 
     RowBox[{"-", "3.090860900556436`*^-12"}], ",", 
     RowBox[{"-", "2.8030910925735952`*^-12"}], ",", 
     RowBox[{"-", "2.546407529280259`*^-12"}], ",", 
     RowBox[{"-", "2.311928426479426`*^-12"}], ",", 
     RowBox[{"-", "2.1014301410104963`*^-12"}], ",", 
     RowBox[{"-", "1.9122481376143696`*^-12"}], ",", 
     RowBox[{"-", "1.7417178810319456`*^-12"}], ",", 
     RowBox[{"-", "1.5862866575844237`*^-12"}], ",", 
     RowBox[{"-", "1.4459544672718039`*^-12"}], ",", 
     RowBox[{"-", "1.318944953254686`*^-12"}], ",", 
     RowBox[{"-", "1.20525811553307`*^-12"}], ",", 
     RowBox[{"-", "1.1004530620084552`*^-12"}], ",", 
     RowBox[{"-", "1.0054179711005418`*^-12"}], ",", 
     RowBox[{"-", "9.201528428093297`*^-13"}], ",", 
     RowBox[{"-", "8.419931418757187`*^-13"}], ",", 
     RowBox[{"-", "7.718270467194088`*^-13"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.9007382661140326`*^-6", ",", "1.9000772293331636`*^-6", ",", 
     "1.8339735283756653`*^-6", ",", "1.767532271879091`*^-6", ",", 
     "1.6918192380366293`*^-6", ",", "1.584843742463704`*^-6", ",", 
     "1.464384444593847`*^-6", ",", "1.3796297153589876`*^-6", ",", 
     "1.3172298052310794`*^-6", ",", "1.1988534991402844`*^-6", ",", 
     "9.721537206353048`*^-7", ",", "6.770361253849444`*^-7", ",", 
     "4.0423555147661716`*^-7", ",", "2.078291017060252`*^-7", ",", 
     "8.840632137463444`*^-8", ",", "2.6092806137967273`*^-8", ",", 
     "2.1345574197084716`*^-9", ",", "2.505287977072612`*^-9", ",", 
     "1.5976596712263813`*^-8", ",", "3.3268697130495184`*^-8", ",", 
     "4.7871366204432775`*^-8", ",", "5.666736835330255`*^-8", ",", 
     "5.9361877857710965`*^-8", ",", "5.7248388696251595`*^-8", ",", 
     "5.20942049497819`*^-8", ",", "4.5476113097464577`*^-8", ",", 
     "3.853014218790918`*^-8", ",", "3.195045428228127`*^-8", ",", 
     "2.608953009186621`*^-8", ",", "2.1073003786398203`*^-8", ",", 
     "1.6893356047376074`*^-8", ",", "1.3475022431208572`*^-8", ",", 
     "1.0715061726784825`*^-8", ",", "8.506297888288827`*^-9", ",", 
     "6.749127479110939`*^-9", ",", "5.35652988631341`*^-9", ",", 
     "4.255299224098508`*^-9", ",", "3.3853471137490487`*^-9", ",", 
     "2.6981590295349633`*^-9", ",", "2.1550023987515488`*^-9", ",", 
     "1.7251919892657952`*^-9", ",", "1.3845395940847993`*^-9", ",", 
     "1.1140413036514474`*^-9", ",", "8.987917077263319`*^-10", ",", 
     "7.271103719119765`*^-10", ",", "5.898450616825812`*^-10", ",", 
     "4.798175190501297`*^-10", ",", "3.913918078524148`*^-10", ",", 
     "3.2014035866723134`*^-10", ",", "2.62572186215948`*^-10", ",", 
     "2.1593660193275355`*^-10", ",", "1.7805534824333336`*^-10", ",", 
     "1.472035826566298`*^-10", ",", "1.2201128996025545`*^-10", ",", 
     "1.013846784303496`*^-10", ",", "8.445377730481596`*^-11", ",", 
     "7.052136652418994`*^-11", ",", "5.902833777327032`*^-11", ",", 
     "4.952216414721988`*^-11", ",", "4.164224520764037`*^-11", ",", 
     "3.509459389761105`*^-11", ",", "2.963940204381288`*^-11", ",", 
     "2.5087487642849737`*^-11", ",", "2.12780904007559`*^-11", ",", 
     "1.808331262509455`*^-11", ",", "1.539923744076077`*^-11", ",", 
     "1.3138823362623953`*^-11", ",", "1.1231904295527784`*^-11", ",", 
     "9.618972285352356`*^-12", ",", "8.253842054273264`*^-12", ",", 
     "7.0938810381449`*^-12", ",", "6.108002992277761`*^-12", ",", 
     "5.267786207241443`*^-12", ",", "4.551026222543442`*^-12", ",", 
     "3.937294934530655`*^-12", ",", "3.411493310068181`*^-12", ",", 
     "2.9620750296999176`*^-12", ",", "2.574829238710663`*^-12", ",", 
     "2.241762331323116`*^-12", ",", "1.9539925233402755`*^-12", ",", 
     "1.7061907442439406`*^-12", ",", "1.4912515666765103`*^-12", ",", 
     "1.305622276959184`*^-12", ",", "1.1439738045737613`*^-12", ",", 
     "1.0045297926808416`*^-12", ",", "8.828493491819245`*^-13", ",", 
     "7.771561172376096`*^-13", ",", "6.847855615887966`*^-13", ",", 
     "6.03073146976385`*^-13", ",", "5.329070518200751`*^-13", ",", 
     "4.725109192804666`*^-13", ",", "4.1744385725905886`*^-13", ",", 
     "3.694822225952521`*^-13", ",", "3.2862601528904634`*^-13", ",", 
     "2.9043434324194095`*^-13", ",", "2.575717417130363`*^-13", ",", 
     "2.3003821070233244`*^-13", ",", "2.0516921495072893`*^-13", ",", 
     "1.8207657603852567`*^-13", ",", "1.6253665080512292`*^-13", ",", 
     "1.4477308241112041`*^-13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9.5367431640625`*^-7"}], ",", 
     RowBox[{"-", "9.536743168503392`*^-7"}], ",", 
     RowBox[{"-", "9.536743155180716`*^-7"}], ",", 
     RowBox[{"-", "9.536664722364918`*^-7"}], ",", 
     RowBox[{"-", "9.533464904176725`*^-7"}], ",", 
     RowBox[{"-", "9.503950570977082`*^-7"}], ",", 
     RowBox[{"-", "9.425219165137833`*^-7"}], ",", 
     RowBox[{"-", "9.345019451600933`*^-7"}], ",", 
     RowBox[{"-", "9.250846586539296`*^-7"}], ",", 
     RowBox[{"-", "9.053441929474104`*^-7"}], ",", 
     RowBox[{"-", "8.619042091151385`*^-7"}], ",", 
     RowBox[{"-", "7.884267310132032`*^-7"}], ",", 
     RowBox[{"-", "7.065759546343031`*^-7"}], ",", 
     RowBox[{"-", "6.4058490156782`*^-7"}], ",", 
     RowBox[{"-", "5.93761156686412`*^-7"}], ",", 
     RowBox[{"-", "5.571717149877031`*^-7"}], ",", 
     RowBox[{"-", "5.205185447110239`*^-7"}], ",", 
     RowBox[{"-", "4.759591425429477`*^-7"}], ",", 
     RowBox[{"-", "4.1977035114548755`*^-7"}], ",", 
     RowBox[{"-", "3.53703616839951`*^-7"}], ",", 
     RowBox[{"-", "2.841928807839622`*^-7"}], ",", 
     RowBox[{"-", "2.188512768785955`*^-7"}], ",", 
     RowBox[{"-", "1.6299245908513171`*^-7"}], ",", 
     RowBox[{"-", "1.1853498915748162`*^-7"}], ",", 
     RowBox[{"-", "8.487209246510474`*^-8"}], ",", 
     RowBox[{"-", "6.020644782722684`*^-8"}], ",", 
     RowBox[{"-", "4.250251972592878`*^-8"}], ",", 
     RowBox[{"-", "2.995054648735618`*^-8"}], ",", 
     RowBox[{"-", "2.1110682091318722`*^-8"}], ",", 
     RowBox[{"-", "1.490373158219427`*^-8"}], ",", 
     RowBox[{"-", "1.0547863915633116`*^-8"}], ",", 
     RowBox[{"-", "7.487728659327786`*^-9"}], ",", 
     RowBox[{"-", "5.333247177219391`*^-9"}], ",", 
     RowBox[{"-", "3.812046234230593`*^-9"}], ",", 
     RowBox[{"-", "2.7344264630357884`*^-9"}], ",", 
     RowBox[{"-", "1.968308627198212`*^-9"}], ",", 
     RowBox[{"-", "1.4216245958209583`*^-9"}], ",", 
     RowBox[{"-", "1.0300587049982823`*^-9"}], ",", 
     RowBox[{"-", "7.485536634987966`*^-10"}], ",", 
     RowBox[{"-", "5.454365847867848`*^-10"}], ",", 
     RowBox[{"-", "3.983680052499494`*^-10"}], ",", 
     RowBox[{"-", "2.9152724678738196`*^-10"}], ",", 
     RowBox[{"-", "2.1366775015962958`*^-10"}], ",", 
     RowBox[{"-", "1.5676482334470165`*^-10"}], ",", 
     RowBox[{"-", "1.1506973152108912`*^-10"}], ",", 
     RowBox[{"-", "8.444578369903866`*^-11"}], ",", 
     RowBox[{"-", "6.190958856677753`*^-11"}], ",", 
     RowBox[{"-", "4.529843167233594`*^-11"}], ",", 
     RowBox[{"-", "3.304068130205451`*^-11"}], ",", 
     RowBox[{"-", "2.3987922759260982`*^-11"}], ",", 
     RowBox[{"-", "1.730127152654859`*^-11"}], ",", 
     RowBox[{"-", "1.2365219959065143`*^-11"}], ",", 
     RowBox[{"-", "8.72502070592418`*^-12"}], ",", 
     RowBox[{"-", "6.0462745921086025`*^-12"}], ",", 
     RowBox[{"-", "4.0820680169417756`*^-12"}], ",", 
     RowBox[{"-", "2.6481039583359234`*^-12"}], ",", 
     RowBox[{"-", "1.6084911180769268`*^-12"}], ",", 
     RowBox[{"-", "8.597567102697212`*^-13"}], ",", 
     RowBox[{"-", "3.277378368693462`*^-13"}], ",", 
     "4.3520742565306136`*^-14", ",", "2.9665159217984183`*^-13", ",", 
     "4.636291350834654`*^-13", ",", "5.666578317686799`*^-13", ",", 
     "6.252776074688882`*^-13", ",", "6.492584248007915`*^-13", ",", 
     "6.52811138479592`*^-13", ",", "6.377121053446899`*^-13", ",", 
     "6.137312880127865`*^-13", ",", "5.826450433232822`*^-13", ",", 
     "5.480060849549773`*^-13", ",", "5.124789481669723`*^-13", ",", 
     "4.742872761198669`*^-13", ",", "4.3787196091216174`*^-13", ",", 
     "4.0323300254385686`*^-13", ",", "3.703704010149522`*^-13", ",", 
     "3.383959779057477`*^-13", ",", "3.090860900556436`*^-13", ",", 
     "2.815525590449397`*^-13", ",", "2.575717417130363`*^-13", ",", 
     "2.3359092438113294`*^-13", ",", "2.113864638886298`*^-13", ",", 
     "1.9184653865522705`*^-13", ",", "1.7497114868092467`*^-13", ",", 
     "1.580957587066223`*^-13", ",", "1.438849039914203`*^-13", ",", 
     "1.305622276959184`*^-13", ",", "1.1901590823981678`*^-13", ",", 
     "1.0746958878371515`*^-13", ",", "9.769962616701378`*^-14", ",", 
     "8.881784197001252`*^-14", ",", "8.08242361927114`*^-14", ",", 
     "7.37188088351104`*^-14", ",", "6.661338147750939`*^-14", ",", 
     "6.039613253960852`*^-14", ",", "5.5067062021407764`*^-14", ",", 
     "5.062616992290714`*^-14", ",", "4.618527782440651`*^-14", ",", 
     "4.1744385725905886`*^-14", ",", "3.730349362740526`*^-14", ",", 
     "3.4638958368304884`*^-14", ",", "3.019806626980426`*^-14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.751845665840193`*^-7", ",", "4.750193076663578`*^-7", ",", 
     "4.5849339902481745`*^-7", ",", "4.420480119726733`*^-7", ",", 
     "4.277951788367318`*^-7", ",", "4.205117198896602`*^-7", ",", 
     "4.1428666830434224`*^-7", ",", "3.971291395732379`*^-7", ",", 
     "3.733248588044802`*^-7", ",", "3.581430743082592`*^-7", ",", 
     "3.5616023730256074`*^-7", ",", "3.547628737443631`*^-7", ",", 
     "3.4465166831587624`*^-7", ",", "3.2746209410738913`*^-7", ",", 
     "3.0478022350344247`*^-7", ",", "2.7618388198646926`*^-7", ",", 
     "2.412576565191671`*^-7", ",", "2.0068232609027348`*^-7", ",", 
     "1.5701266531387148`*^-7", ",", "1.1457602622222396`*^-7", ",", 
     "7.784054445458821`*^-8", ",", "4.941086095833214`*^-8", ",", 
     "2.9422634550968496`*^-8", ",", "1.6401776825603065`*^-8", ",", 
     "8.414972718640001`*^-9", ",", "3.761032818516696`*^-9", ",", 
     "1.1860605830804616`*^-9", ",", 
     RowBox[{"-", "1.4820189520037275`*^-10"}], ",", 
     RowBox[{"-", "7.697669168749144`*^-10"}], ",", 
     RowBox[{"-", "9.981602211439622`*^-10"}], ",", 
     RowBox[{"-", "1.0208558443025595`*^-9"}], ",", 
     RowBox[{"-", "9.447425064479376`*^-10"}], ",", 
     RowBox[{"-", "8.288192354655166`*^-10"}], ",", 
     RowBox[{"-", "7.04249547567315`*^-10"}], ",", 
     RowBox[{"-", "5.863727281507636`*^-10"}], ",", 
     RowBox[{"-", "4.817706233950503`*^-10"}], ",", 
     RowBox[{"-", "3.9235681370541897`*^-10"}], ",", 
     RowBox[{"-", "3.1769920028068555`*^-10"}], ",", 
     RowBox[{"-", "2.563127488031114`*^-10"}], ",", 
     RowBox[{"-", "2.0635093633813995`*^-10"}], ",", 
     RowBox[{"-", "1.6596457541595555`*^-10"}], ",", 
     RowBox[{"-", "1.3346301841465902`*^-10"}], ",", 
     RowBox[{"-", "1.0737810640648604`*^-10"}], ",", 
     RowBox[{"-", "8.647438320963374`*^-11"}], ",", 
     RowBox[{"-", "6.973266408749623`*^-11"}], ",", 
     RowBox[{"-", "5.632294630686374`*^-11"}], ",", 
     RowBox[{"-", "4.5574211071652826`*^-11"}], ",", 
     RowBox[{"-", "3.695044270557446`*^-11"}], ",", 
     RowBox[{"-", "3.002087467507408`*^-11"}], ",", 
     RowBox[{"-", "2.4444002377776997`*^-11"}], ",", 
     RowBox[{"-", "1.9948043217254963`*^-11"}], ",", 
     RowBox[{"-", "1.63158375698913`*^-11"}], ",", 
     RowBox[{"-", "1.3376855179103586`*^-11"}], ",", 
     RowBox[{"-", "1.09925402114186`*^-11"}], ",", 
     RowBox[{"-", "9.053646721213227`*^-12"}], ",", 
     RowBox[{"-", "7.474465490986404`*^-12"}], ",", 
     RowBox[{"-", "6.184386336371972`*^-12"}], ",", 
     RowBox[{"-", "5.129230373768223`*^-12"}], ",", 
     RowBox[{"-", "4.263256414560601`*^-12"}], ",", 
     RowBox[{"-", "3.552713678800501`*^-12"}], ",", 
     RowBox[{"-", "2.965627743378718`*^-12"}], ",", 
     RowBox[{"-", "2.48157050464215`*^-12"}], ",", 
     RowBox[{"-", "2.0801138589376933`*^-12"}], ",", 
     RowBox[{"-", "1.7479351299698465`*^-12"}], ",", 
     RowBox[{"-", "1.4717116414431075`*^-12"}], ",", 
     RowBox[{"-", "1.241673430740775`*^-12"}], ",", 
     RowBox[{"-", "1.049826892085548`*^-12"}], ",", 
     RowBox[{"-", "8.890665981198254`*^-13"}], ",", 
     RowBox[{"-", "7.540634783254063`*^-13"}], ",", 
     RowBox[{"-", "6.412648190234904`*^-13"}], ",", 
     RowBox[{"-", "5.46229728115577`*^-13"}], ",", 
     RowBox[{"-", "4.662936703425657`*^-13"}], ",", 
     RowBox[{"-", "3.979039320256561`*^-13"}], ",", 
     RowBox[{"-", "3.410605131648481`*^-13"}], ",", 
     RowBox[{"-", "2.922107000813412`*^-13"}], ",", 
     RowBox[{"-", "2.5135449277513544`*^-13"}], ",", 
     RowBox[{"-", "2.1671553440683056`*^-13"}], ",", 
     RowBox[{"-", "1.8562928971732617`*^-13"}], ",", 
     RowBox[{"-", "1.6076029396572267`*^-13"}], ",", 
     RowBox[{"-", "1.3855583347321954`*^-13"}], ",", 
     RowBox[{"-", "1.2168044349891716`*^-13"}], ",", 
     RowBox[{"-", "1.0480505352461478`*^-13"}], ",", 
     RowBox[{"-", "9.059419880941277`*^-14"}], ",", 
     RowBox[{"-", "7.815970093361102`*^-14"}], ",", 
     RowBox[{"-", "6.838973831690964`*^-14"}], ",", 
     RowBox[{"-", "5.950795411990839`*^-14"}], ",", 
     RowBox[{"-", "5.240252676230739`*^-14"}], ",", 
     RowBox[{"-", "4.529709940470639`*^-14"}], ",", 
     RowBox[{"-", "4.085620730620576`*^-14"}], ",", 
     RowBox[{"-", "3.552713678800501`*^-14"}], ",", 
     RowBox[{"-", "3.019806626980426`*^-14"}], ",", 
     RowBox[{"-", "2.6645352591003757`*^-14"}], ",", 
     RowBox[{"-", "2.4868995751603507`*^-14"}], ",", 
     RowBox[{"-", "2.042810365310288`*^-14"}], ",", 
     RowBox[{"-", "1.865174681370263`*^-14"}], ",", 
     RowBox[{"-", "1.5987211554602254`*^-14"}], ",", 
     RowBox[{"-", "1.4210854715202004`*^-14"}], ",", 
     RowBox[{"-", "1.2434497875801753`*^-14"}], ",", 
     RowBox[{"-", "1.0658141036401503`*^-14"}], ",", 
     RowBox[{"-", "1.1546319456101628`*^-14"}], ",", 
     RowBox[{"-", "8.881784197001252`*^-15"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.670604777429532*^9, 3.67060479847334*^9}, 
   3.670604936987836*^9, 3.6706051829869556`*^9, {3.6706103566846733`*^9, 
   3.6706103822107267`*^9}}]
}, Open  ]]
},
WindowSize->{1301, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 232, 5, 35, "Text"],
Cell[792, 27, 29571, 813, 1331, "Input"],
Cell[30366, 842, 235, 5, 35, "Text"],
Cell[30604, 849, 13601, 407, 847, "Input"],
Cell[CellGroupData[{
Cell[44230, 1260, 6021, 168, 363, "Input"],
Cell[50254, 1430, 875, 25, 57, "Output"],
Cell[51132, 1457, 716, 21, 61, "Output"],
Cell[51851, 1480, 1236, 38, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53124, 1523, 785, 20, 121, "Input"],
Cell[53912, 1545, 523, 15, 59, "Output"],
Cell[54438, 1562, 120, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54595, 1569, 1317, 30, 165, "Input"],
Cell[55915, 1601, 213, 3, 32, "Output"],
Cell[56131, 1606, 213, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56381, 1614, 1166, 28, 187, "Input"],
Cell[57550, 1644, 166, 2, 34, "Output"],
Cell[57719, 1648, 163, 2, 32, "Output"]
}, Open  ]],
Cell[57897, 1653, 230, 5, 35, "Text"],
Cell[CellGroupData[{
Cell[58152, 1662, 13373, 374, 1265, "Input"],
Cell[71528, 2038, 7678, 128, 238, "Output"],
Cell[79209, 2168, 7676, 128, 238, "Output"],
Cell[86888, 2298, 14916, 248, 238, "Output"],
Cell[101807, 2548, 19665, 324, 237, "Output"]
}, Open  ]],
Cell[121487, 2875, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[121606, 2880, 4397, 120, 165, "Input"],
Cell[126006, 3002, 9253, 155, 238, "Output"],
Cell[135262, 3159, 9091, 152, 238, "Output"],
Cell[144356, 3313, 18036, 300, 238, "Output"],
Cell[162395, 3615, 19536, 323, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181968, 3943, 1158, 32, 55, "Input"],
Cell[183129, 3977, 9080, 200, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192246, 4182, 260, 4, 32, "Input"],
Cell[192509, 4188, 31016, 537, 1888, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
